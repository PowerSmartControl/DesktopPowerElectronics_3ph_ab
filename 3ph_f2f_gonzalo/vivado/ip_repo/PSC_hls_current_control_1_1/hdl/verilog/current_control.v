// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="current_control,hls_ip_2017_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.833400,HLS_SYN_LAT=72,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=16,HLS_SYN_FF=4776,HLS_SYN_LUT=7115}" *)

module current_control (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        i_alfa_ref,
        i_beta_ref,
        ia,
        ib,
        ic,
        da,
        db,
        dc,
        ialfa,
        ibeta,
        dalfa,
        dbeta,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP
);

parameter    ap_ST_fsm_state1 = 87'd1;
parameter    ap_ST_fsm_state2 = 87'd2;
parameter    ap_ST_fsm_state3 = 87'd4;
parameter    ap_ST_fsm_state4 = 87'd8;
parameter    ap_ST_fsm_state5 = 87'd16;
parameter    ap_ST_fsm_state6 = 87'd32;
parameter    ap_ST_fsm_state7 = 87'd64;
parameter    ap_ST_fsm_state8 = 87'd128;
parameter    ap_ST_fsm_state9 = 87'd256;
parameter    ap_ST_fsm_state10 = 87'd512;
parameter    ap_ST_fsm_state11 = 87'd1024;
parameter    ap_ST_fsm_state12 = 87'd2048;
parameter    ap_ST_fsm_state13 = 87'd4096;
parameter    ap_ST_fsm_state14 = 87'd8192;
parameter    ap_ST_fsm_state15 = 87'd16384;
parameter    ap_ST_fsm_state16 = 87'd32768;
parameter    ap_ST_fsm_state17 = 87'd65536;
parameter    ap_ST_fsm_state18 = 87'd131072;
parameter    ap_ST_fsm_state19 = 87'd262144;
parameter    ap_ST_fsm_state20 = 87'd524288;
parameter    ap_ST_fsm_state21 = 87'd1048576;
parameter    ap_ST_fsm_state22 = 87'd2097152;
parameter    ap_ST_fsm_state23 = 87'd4194304;
parameter    ap_ST_fsm_state24 = 87'd8388608;
parameter    ap_ST_fsm_state25 = 87'd16777216;
parameter    ap_ST_fsm_state26 = 87'd33554432;
parameter    ap_ST_fsm_state27 = 87'd67108864;
parameter    ap_ST_fsm_state28 = 87'd134217728;
parameter    ap_ST_fsm_state29 = 87'd268435456;
parameter    ap_ST_fsm_state30 = 87'd536870912;
parameter    ap_ST_fsm_state31 = 87'd1073741824;
parameter    ap_ST_fsm_state32 = 87'd2147483648;
parameter    ap_ST_fsm_state33 = 87'd4294967296;
parameter    ap_ST_fsm_state34 = 87'd8589934592;
parameter    ap_ST_fsm_state35 = 87'd17179869184;
parameter    ap_ST_fsm_state36 = 87'd34359738368;
parameter    ap_ST_fsm_state37 = 87'd68719476736;
parameter    ap_ST_fsm_state38 = 87'd137438953472;
parameter    ap_ST_fsm_state39 = 87'd274877906944;
parameter    ap_ST_fsm_state40 = 87'd549755813888;
parameter    ap_ST_fsm_state41 = 87'd1099511627776;
parameter    ap_ST_fsm_state42 = 87'd2199023255552;
parameter    ap_ST_fsm_state43 = 87'd4398046511104;
parameter    ap_ST_fsm_state44 = 87'd8796093022208;
parameter    ap_ST_fsm_state45 = 87'd17592186044416;
parameter    ap_ST_fsm_state46 = 87'd35184372088832;
parameter    ap_ST_fsm_state47 = 87'd70368744177664;
parameter    ap_ST_fsm_state48 = 87'd140737488355328;
parameter    ap_ST_fsm_state49 = 87'd281474976710656;
parameter    ap_ST_fsm_state50 = 87'd562949953421312;
parameter    ap_ST_fsm_state51 = 87'd1125899906842624;
parameter    ap_ST_fsm_state52 = 87'd2251799813685248;
parameter    ap_ST_fsm_state53 = 87'd4503599627370496;
parameter    ap_ST_fsm_state54 = 87'd9007199254740992;
parameter    ap_ST_fsm_state55 = 87'd18014398509481984;
parameter    ap_ST_fsm_state56 = 87'd36028797018963968;
parameter    ap_ST_fsm_state57 = 87'd72057594037927936;
parameter    ap_ST_fsm_state58 = 87'd144115188075855872;
parameter    ap_ST_fsm_state59 = 87'd288230376151711744;
parameter    ap_ST_fsm_state60 = 87'd576460752303423488;
parameter    ap_ST_fsm_state61 = 87'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 87'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 87'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 87'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 87'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 87'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 87'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 87'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 87'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 87'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 87'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 87'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 87'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 87'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 87'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 87'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 87'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 87'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 87'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 87'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 87'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 87'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 87'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 87'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 87'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 87'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 87'd77371252455336267181195264;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] i_alfa_ref;
input  [31:0] i_beta_ref;
input  [11:0] ia;
input  [11:0] ib;
input  [11:0] ic;
output  [8:0] da;
output  [8:0] db;
output  [8:0] dc;
output  [7:0] ialfa;
output  [7:0] ibeta;
output  [7:0] dalfa;
output  [7:0] dbeta;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;

reg ap_done;
reg ap_idle;
reg ap_ready;

reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [86:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] rstIntN;
wire   [0:0] ctrlEna;
wire   [31:0] params_Kp;
wire   [31:0] params_Ki2;
wire   [31:0] params_y_max;
wire   [31:0] params_y_min;
reg   [8:0] da_1_data_reg;
reg    da_1_vld_reg;
reg    da_1_vld_in;
reg    da_1_ack_in;
reg   [8:0] db_1_data_reg;
reg    db_1_vld_reg;
reg    db_1_vld_in;
reg    db_1_ack_in;
reg   [8:0] dc_1_data_reg;
reg    dc_1_vld_reg;
reg    dc_1_vld_in;
reg    dc_1_ack_in;
reg   [7:0] ialfa_1_data_reg;
reg    ialfa_1_vld_reg;
reg    ialfa_1_vld_in;
reg    ialfa_1_ack_in;
reg   [7:0] ibeta_1_data_reg;
reg    ibeta_1_vld_reg;
reg    ibeta_1_vld_in;
reg    ibeta_1_ack_in;
reg   [7:0] dalfa_1_data_reg;
reg    dalfa_1_vld_reg;
reg    dalfa_1_vld_in;
reg    dalfa_1_ack_in;
reg   [7:0] dbeta_1_data_reg;
reg    dbeta_1_vld_reg;
reg    dbeta_1_vld_in;
reg    dbeta_1_ack_in;
reg   [31:0] y_integral_alfa;
reg   [31:0] y_integral_beta;
reg   [1:0] sat_alfa;
reg   [31:0] y_alfa;
reg   [31:0] y_beta;
wire   [31:0] grp_fu_349_p1;
reg   [31:0] reg_361;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state15;
wire   [31:0] grp_fu_323_p2;
reg   [31:0] reg_367;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state78;
reg   [31:0] reg_376;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state39;
wire   [31:0] grp_fu_312_p2;
reg   [31:0] reg_384;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state64;
reg   [0:0] tmp_36_reg_2122;
reg   [0:0] sel_tmp1_reg_2135;
wire    ap_CS_fsm_state70;
wire    ap_CS_fsm_state83;
wire   [31:0] grp_fu_329_p2;
reg   [31:0] reg_392;
wire    ap_CS_fsm_state59;
wire   [31:0] grp_fu_317_p2;
reg   [31:0] reg_399;
reg   [31:0] reg_405;
wire    ap_CS_fsm_state48;
wire   [31:0] tmp_i_fu_410_p1;
wire   [31:0] tmp_i3_fu_415_p1;
wire    ap_CS_fsm_state5;
wire   [31:0] tmp_i8_fu_420_p1;
reg   [31:0] tmp_s_reg_1977;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state40;
wire   [0:0] grp_fu_352_p2;
reg   [0:0] tmp_14_reg_1994;
wire    ap_CS_fsm_state43;
reg   [31:0] params_y_min_read_reg_1999;
wire    ap_CS_fsm_state44;
reg   [31:0] params_y_max_read_reg_2010;
reg   [31:0] params_Ki2_read_reg_2021;
reg   [31:0] params_Kp_read_reg_2026;
reg   [0:0] ctrlEna_read_reg_2032;
reg   [31:0] tmp_5_reg_2038;
wire   [0:0] not_rstIntN_fu_433_p2;
reg   [0:0] not_rstIntN_reg_2044;
wire   [31:0] y_integral_alfa_load_1_fu_439_p3;
reg   [31:0] y_integral_alfa_load_1_reg_2049;
wire   [31:0] y_integral_beta_load_1_fu_447_p3;
reg   [31:0] y_integral_beta_load_1_reg_2054;
wire   [0:0] tmp_9_fu_497_p2;
reg   [0:0] tmp_9_reg_2059;
wire   [0:0] or_cond_fu_508_p2;
reg   [0:0] or_cond_reg_2064;
reg   [31:0] y_alfa_load_reg_2068;
reg   [31:0] y_beta_load_reg_2073;
wire   [0:0] tmp_8_fu_522_p2;
reg   [0:0] tmp_8_reg_2078;
reg   [0:0] tmp_18_reg_2083;
reg   [31:0] tmp_11_reg_2091;
wire    ap_CS_fsm_state53;
wire   [0:0] tmp_32_fu_583_p2;
reg   [0:0] tmp_32_reg_2099;
wire    ap_CS_fsm_state54;
wire   [0:0] tmp_33_fu_601_p2;
reg   [0:0] tmp_33_reg_2105;
reg   [0:0] tmp_35_reg_2112;
wire   [0:0] grp_fu_357_p2;
reg   [0:0] tmp_41_reg_2117;
wire   [0:0] tmp_36_fu_611_p2;
wire    ap_CS_fsm_state55;
wire   [0:0] tmp_39_fu_645_p2;
reg   [0:0] tmp_39_reg_2129;
wire   [0:0] sel_tmp1_fu_667_p2;
wire   [31:0] grp_fu_337_p2;
reg   [31:0] tmp_22_reg_2142;
wire   [31:0] y_integral_alfa_new_1_fu_678_p3;
reg   [31:0] y_integral_alfa_new_1_reg_2147;
wire    ap_CS_fsm_state65;
wire   [31:0] y_integral_beta_new_1_fu_690_p3;
reg   [31:0] y_integral_beta_new_1_reg_2153;
reg   [0:0] tmp_47_reg_2159;
wire    ap_CS_fsm_state71;
reg   [0:0] tmp_59_reg_2164;
wire   [31:0] tmp_19_fu_758_p3;
reg   [31:0] tmp_19_reg_2169;
wire    ap_CS_fsm_state72;
wire   [31:0] tmp_25_fu_811_p3;
reg   [31:0] tmp_25_reg_2176;
reg   [0:0] tmp_53_reg_2183;
wire    ap_CS_fsm_state73;
reg   [0:0] tmp_65_reg_2188;
wire   [31:0] tmp_21_fu_863_p3;
wire    ap_CS_fsm_state74;
wire   [31:0] tmp_27_fu_920_p3;
wire   [31:0] da_f_fu_972_p3;
wire    ap_CS_fsm_state75;
wire   [31:0] d_beta1_fu_979_p3;
reg   [0:0] p_Result_s_reg_2213;
wire   [22:0] loc_V_1_fu_1008_p1;
reg   [22:0] loc_V_1_reg_2218;
wire   [0:0] isNeg_fu_1022_p3;
reg   [0:0] isNeg_reg_2223;
wire   [8:0] sh_assign_1_fu_1040_p3;
reg   [8:0] sh_assign_1_reg_2228;
reg   [0:0] p_Result_5_reg_2234;
wire   [22:0] loc_V_11_fu_1066_p1;
reg   [22:0] loc_V_11_reg_2239;
wire   [0:0] isNeg_5_fu_1080_p3;
reg   [0:0] isNeg_5_reg_2244;
wire   [8:0] sh_assign_10_fu_1098_p3;
reg   [8:0] sh_assign_10_reg_2249;
reg   [0:0] p_Result_6_reg_2255;
wire   [22:0] loc_V_13_fu_1124_p1;
reg   [22:0] loc_V_13_reg_2260;
wire   [0:0] isNeg_6_fu_1138_p3;
reg   [0:0] isNeg_6_reg_2265;
wire   [8:0] sh_assign_12_fu_1156_p3;
reg   [8:0] sh_assign_12_reg_2270;
wire   [8:0] tmp_69_fu_1221_p3;
reg   [8:0] tmp_69_reg_2276;
wire    ap_CS_fsm_state76;
wire   [6:0] p_Val2_27_fu_1285_p3;
reg   [6:0] p_Val2_27_reg_2282;
wire   [6:0] p_Val2_32_fu_1349_p3;
reg   [6:0] p_Val2_32_reg_2287;
wire   [8:0] tmp_71_fu_1361_p3;
wire    ap_CS_fsm_state77;
wire   [7:0] p_Val2_29_fu_1377_p3;
wire   [7:0] p_Val2_34_fu_1394_p3;
reg   [0:0] p_Result_3_reg_2307;
wire   [22:0] loc_V_7_fu_1424_p1;
reg   [22:0] loc_V_7_reg_2312;
wire   [8:0] sh_assign_6_fu_1432_p2;
reg   [8:0] sh_assign_6_reg_2317;
reg   [0:0] isNeg_3_reg_2322;
wire   [7:0] tmp_5_i_i_i_fu_1446_p2;
reg   [7:0] tmp_5_i_i_i_reg_2328;
reg   [0:0] p_Result_4_reg_2333;
wire   [22:0] loc_V_9_fu_1474_p1;
reg   [22:0] loc_V_9_reg_2338;
wire   [8:0] sh_assign_8_fu_1482_p2;
reg   [8:0] sh_assign_8_reg_2343;
reg   [0:0] isNeg_4_reg_2348;
wire   [7:0] tmp_5_i_i_i1_fu_1496_p2;
reg   [7:0] tmp_5_i_i_i1_reg_2354;
wire   [6:0] p_Val2_8_fu_1570_p3;
reg   [6:0] p_Val2_8_reg_2359;
wire    ap_CS_fsm_state79;
wire   [6:0] p_Val2_4_fu_1645_p3;
reg   [6:0] p_Val2_4_reg_2364;
wire   [7:0] p_Val2_17_fu_1661_p3;
wire    ap_CS_fsm_state80;
wire   [7:0] p_Val2_22_fu_1678_p3;
reg   [0:0] p_Result_1_reg_2379;
wire    ap_CS_fsm_state84;
wire   [22:0] loc_V_3_fu_1708_p1;
reg   [22:0] loc_V_3_reg_2384;
wire   [0:0] isNeg_1_fu_1722_p3;
reg   [0:0] isNeg_1_reg_2389;
wire   [8:0] sh_assign_3_fu_1740_p3;
reg   [8:0] sh_assign_3_reg_2394;
reg   [0:0] p_Result_2_reg_2400;
wire   [22:0] loc_V_5_fu_1770_p1;
reg   [22:0] loc_V_5_reg_2405;
wire   [0:0] isNeg_2_fu_1784_p3;
reg   [0:0] isNeg_2_reg_2410;
wire   [8:0] sh_assign_5_fu_1802_p3;
reg   [8:0] sh_assign_5_reg_2415;
wire   [8:0] tmp_74_fu_1867_p3;
reg   [8:0] tmp_74_reg_2421;
wire    ap_CS_fsm_state85;
wire   [8:0] tmp_79_fu_1931_p3;
reg   [8:0] tmp_79_reg_2427;
wire   [8:0] tmp_76_fu_1943_p3;
wire    ap_CS_fsm_state86;
wire   [8:0] tmp_81_fu_1955_p3;
wire   [0:0] y_integral_alfa_flag_2_phi_fu_265_p4;
reg   [0:0] y_integral_alfa_flag_2_reg_261;
wire    ap_CS_fsm_state45;
wire   [0:0] or_cond4_fu_532_p2;
reg   [31:0] y_integral_alfa_new_2_reg_272;
reg   [31:0] y_integral_beta_new_2_reg_283;
reg   [31:0] x_assign_8_reg_294;
reg   [31:0] x_assign_9_reg_303;
wire   [1:0] storemerge1_fu_699_p3;
reg   [31:0] grp_fu_312_p0;
reg   [31:0] grp_fu_312_p1;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state66;
reg   [31:0] grp_fu_317_p0;
reg   [31:0] grp_fu_317_p1;
reg   [31:0] grp_fu_323_p0;
reg   [31:0] grp_fu_323_p1;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state56;
reg   [31:0] grp_fu_329_p0;
reg   [31:0] grp_fu_329_p1;
reg   [31:0] grp_fu_337_p0;
reg   [31:0] grp_fu_337_p1;
reg   [31:0] grp_fu_349_p0;
reg   [31:0] grp_fu_352_p0;
reg   [31:0] grp_fu_352_p1;
reg   [31:0] grp_fu_357_p0;
reg   [31:0] grp_fu_357_p1;
wire   [31:0] tmp_4_to_int_fu_467_p1;
wire   [7:0] tmp_fu_471_p4;
wire   [22:0] tmp_7_fu_481_p1;
wire   [0:0] notrhs_fu_491_p2;
wire   [0:0] notlhs_fu_485_p2;
wire   [0:0] tmp_6_fu_459_p3;
wire   [0:0] tmp_15_fu_503_p2;
wire   [0:0] tmp_20_fu_528_p2;
wire   [31:0] tmp_11_to_int_fu_537_p1;
wire   [31:0] params_y_min_to_int_fu_554_p1;
wire   [7:0] tmp_24_fu_540_p4;
wire   [22:0] tmp_26_fu_550_p1;
wire   [0:0] notrhs2_fu_577_p2;
wire   [0:0] notlhs2_fu_571_p2;
wire   [7:0] tmp_30_fu_557_p4;
wire   [22:0] tmp_31_fu_567_p1;
wire   [0:0] notrhs3_fu_595_p2;
wire   [0:0] notlhs3_fu_589_p2;
wire   [0:0] tmp_34_fu_607_p2;
wire   [31:0] params_y_max_to_int_fu_616_p1;
wire   [7:0] tmp_37_fu_619_p4;
wire   [22:0] tmp_38_fu_629_p1;
wire   [0:0] notrhs5_fu_639_p2;
wire   [0:0] notlhs5_fu_633_p2;
wire   [0:0] tmp_40_fu_651_p2;
wire   [0:0] tmp_42_fu_656_p2;
wire   [0:0] sel_tmp_fu_661_p2;
wire   [31:0] sel_tmp2_fu_673_p3;
wire   [31:0] sel_tmp6_fu_684_p3;
wire   [1:0] sel_tmp10_cast_fu_696_p1;
wire   [31:0] tmp_17_to_int_fu_712_p1;
wire   [7:0] tmp_43_fu_716_p4;
wire   [22:0] tmp_44_fu_726_p1;
wire   [0:0] notrhs6_fu_736_p2;
wire   [0:0] notlhs6_fu_730_p2;
wire   [0:0] tmp_45_fu_742_p2;
wire   [0:0] tmp_46_fu_748_p2;
wire   [0:0] tmp_48_fu_753_p2;
wire   [31:0] tmp_23_to_int_fu_765_p1;
wire   [7:0] tmp_55_fu_769_p4;
wire   [22:0] tmp_56_fu_779_p1;
wire   [0:0] notrhs1_fu_789_p2;
wire   [0:0] notlhs1_fu_783_p2;
wire   [0:0] tmp_57_fu_795_p2;
wire   [0:0] tmp_58_fu_801_p2;
wire   [0:0] tmp_60_fu_806_p2;
wire   [31:0] tmp_19_to_int_fu_818_p1;
wire   [7:0] tmp_49_fu_821_p4;
wire   [22:0] tmp_50_fu_831_p1;
wire   [0:0] notrhs8_fu_841_p2;
wire   [0:0] notlhs8_fu_835_p2;
wire   [0:0] tmp_51_fu_847_p2;
wire   [0:0] tmp_52_fu_853_p2;
wire   [0:0] tmp_54_fu_858_p2;
wire   [31:0] tmp_25_to_int_fu_875_p1;
wire   [7:0] tmp_61_fu_878_p4;
wire   [22:0] tmp_62_fu_888_p1;
wire   [0:0] notrhs4_fu_898_p2;
wire   [0:0] notlhs4_fu_892_p2;
wire   [0:0] tmp_63_fu_904_p2;
wire   [0:0] tmp_64_fu_910_p2;
wire   [0:0] tmp_66_fu_915_p2;
wire   [31:0] p_Val2_24_fu_944_p1;
wire   [31:0] d_alfa_neg_fu_948_p2;
wire   [31:0] p_Val2_30_fu_958_p1;
wire   [31:0] d_beta_neg_fu_962_p2;
wire   [31:0] d_alfa_fu_954_p1;
wire   [31:0] d_beta_fu_968_p1;
wire   [31:0] p_Val2_s_fu_986_p1;
wire   [7:0] loc_V_fu_998_p4;
wire   [8:0] tmp_i_i_i_i_cast_fu_1012_p1;
wire   [8:0] sh_assign_fu_1016_p2;
wire   [7:0] tmp_12_i_i_i_fu_1030_p2;
wire  signed [8:0] tmp_12_i_i_i_cast_fu_1036_p1;
wire   [7:0] loc_V_10_fu_1056_p4;
wire   [8:0] tmp_i_i_i_i5_cast_fu_1070_p1;
wire   [8:0] sh_assign_s_fu_1074_p2;
wire   [7:0] tmp_5_i_i_i2_fu_1088_p2;
wire  signed [8:0] tmp_5_i_i_i2_cast_fu_1094_p1;
wire   [7:0] loc_V_12_fu_1114_p4;
wire   [8:0] tmp_i_i_i_i6_cast_fu_1128_p1;
wire   [8:0] sh_assign_11_fu_1132_p2;
wire   [7:0] tmp_5_i_i_i3_fu_1146_p2;
wire  signed [8:0] tmp_5_i_i_i3_cast_fu_1152_p1;
wire   [24:0] tmp_11_i_i_i_fu_1164_p4;
wire  signed [31:0] sh_assign_1_cast_fu_1177_p1;
wire  signed [24:0] sh_assign_1_cast_cas_fu_1180_p1;
wire   [62:0] tmp_11_i_i_i_cast1_fu_1173_p1;
wire   [62:0] tmp_13_i_i_i_fu_1183_p1;
wire   [24:0] tmp_14_i_i_i_fu_1187_p2;
wire   [0:0] tmp_87_fu_1199_p3;
wire   [62:0] tmp_15_i_i_i_fu_1193_p2;
wire   [8:0] tmp_67_fu_1207_p1;
wire   [8:0] tmp_68_fu_1211_p4;
wire   [24:0] tmp_3_i_i_i2_fu_1228_p4;
wire  signed [31:0] sh_assign_11_cast_fu_1241_p1;
wire  signed [24:0] sh_assign_11_cast_ca_fu_1244_p1;
wire   [54:0] tmp_3_i_i_i2_cast1_fu_1237_p1;
wire   [54:0] tmp_7_i_i_i2_fu_1247_p1;
wire   [24:0] tmp_8_i_i_i2_fu_1251_p2;
wire   [0:0] tmp_113_fu_1263_p3;
wire   [54:0] tmp_i_i_i5_fu_1257_p2;
wire   [6:0] tmp_86_fu_1271_p1;
wire   [6:0] tmp_88_fu_1275_p4;
wire   [24:0] tmp_3_i_i_i3_fu_1292_p4;
wire  signed [31:0] sh_assign_13_cast_fu_1305_p1;
wire  signed [24:0] sh_assign_13_cast_ca_fu_1308_p1;
wire   [54:0] tmp_3_i_i_i3_cast1_fu_1301_p1;
wire   [54:0] tmp_7_i_i_i3_fu_1311_p1;
wire   [24:0] tmp_8_i_i_i3_fu_1315_p2;
wire   [0:0] tmp_117_fu_1327_p3;
wire   [54:0] tmp_i_i_i6_fu_1321_p2;
wire   [6:0] tmp_89_fu_1335_p1;
wire   [6:0] tmp_90_fu_1339_p4;
wire   [8:0] tmp_70_fu_1356_p2;
wire   [7:0] tmp_1_i_i_i2_fu_1368_p1;
wire   [7:0] tmp_10_i_i_i2_fu_1371_p2;
wire   [7:0] tmp_1_i_i_i3_fu_1385_p1;
wire   [7:0] tmp_10_i_i_i3_fu_1388_p2;
wire   [31:0] p_Val2_14_fu_1402_p1;
wire   [7:0] loc_V_6_fu_1414_p4;
wire   [8:0] tmp_i_i_i_i3_cast_fu_1428_p1;
wire   [31:0] grp_fu_344_p2;
wire   [31:0] p_Val2_19_fu_1452_p1;
wire   [7:0] loc_V_8_fu_1464_p4;
wire   [8:0] tmp_i_i_i_i4_cast_fu_1478_p1;
wire   [24:0] tmp_3_i_i_i_fu_1502_p4;
wire  signed [8:0] tmp_5_i_i_i_cast_fu_1515_p1;
wire   [8:0] sh_assign_7_fu_1518_p3;
wire  signed [31:0] sh_assign_7_cast_fu_1524_p1;
wire  signed [24:0] sh_assign_7_cast_cas_fu_1528_p1;
wire   [54:0] tmp_3_i_i_i_cast1_fu_1511_p1;
wire   [54:0] tmp_7_i_i_i_fu_1532_p1;
wire   [24:0] tmp_8_i_i_i_fu_1536_p2;
wire   [0:0] tmp_105_fu_1548_p3;
wire   [54:0] tmp_i_i_i3_fu_1542_p2;
wire   [6:0] tmp_82_fu_1556_p1;
wire   [6:0] tmp_83_fu_1560_p4;
wire   [24:0] tmp_3_i_i_i1_fu_1577_p4;
wire  signed [8:0] tmp_5_i_i_i1_cast_fu_1590_p1;
wire   [8:0] sh_assign_9_fu_1593_p3;
wire  signed [31:0] sh_assign_9_cast_fu_1599_p1;
wire  signed [24:0] sh_assign_9_cast_cas_fu_1603_p1;
wire   [54:0] tmp_3_i_i_i1_cast1_fu_1586_p1;
wire   [54:0] tmp_7_i_i_i1_fu_1607_p1;
wire   [24:0] tmp_8_i_i_i1_fu_1611_p2;
wire   [0:0] tmp_109_fu_1623_p3;
wire   [54:0] tmp_i_i_i4_fu_1617_p2;
wire   [6:0] tmp_84_fu_1631_p1;
wire   [6:0] tmp_85_fu_1635_p4;
wire   [7:0] tmp_1_i_i_i_fu_1652_p1;
wire   [7:0] tmp_10_i_i_i_fu_1655_p2;
wire   [7:0] tmp_1_i_i_i1_fu_1669_p1;
wire   [7:0] tmp_10_i_i_i1_fu_1672_p2;
wire   [31:0] p_Val2_5_fu_1686_p1;
wire   [7:0] loc_V_2_fu_1698_p4;
wire   [8:0] tmp_i_i_i_i1_cast_fu_1712_p1;
wire   [8:0] sh_assign_2_fu_1716_p2;
wire   [7:0] tmp_12_i_i_i1_fu_1730_p2;
wire  signed [8:0] tmp_12_i_i_i1_cast_fu_1736_p1;
wire   [31:0] p_Val2_9_fu_1748_p1;
wire   [7:0] loc_V_4_fu_1760_p4;
wire   [8:0] tmp_i_i_i_i2_cast_fu_1774_p1;
wire   [8:0] sh_assign_4_fu_1778_p2;
wire   [7:0] tmp_12_i_i_i2_fu_1792_p2;
wire  signed [8:0] tmp_12_i_i_i2_cast_fu_1798_p1;
wire   [24:0] tmp_11_i_i_i1_fu_1810_p4;
wire  signed [31:0] sh_assign_3_cast_fu_1823_p1;
wire  signed [24:0] sh_assign_3_cast_cas_fu_1826_p1;
wire   [62:0] tmp_11_i_i_i1_cast1_fu_1819_p1;
wire   [62:0] tmp_13_i_i_i1_fu_1829_p1;
wire   [24:0] tmp_14_i_i_i1_fu_1833_p2;
wire   [0:0] tmp_97_fu_1845_p3;
wire   [62:0] tmp_15_i_i_i1_fu_1839_p2;
wire   [8:0] tmp_72_fu_1853_p1;
wire   [8:0] tmp_73_fu_1857_p4;
wire   [24:0] tmp_11_i_i_i2_fu_1874_p4;
wire  signed [31:0] sh_assign_5_cast_fu_1887_p1;
wire  signed [24:0] sh_assign_5_cast_cas_fu_1890_p1;
wire   [62:0] tmp_11_i_i_i2_cast1_fu_1883_p1;
wire   [62:0] tmp_13_i_i_i2_fu_1893_p1;
wire   [24:0] tmp_14_i_i_i2_fu_1897_p2;
wire   [0:0] tmp_101_fu_1909_p3;
wire   [62:0] tmp_15_i_i_i2_fu_1903_p2;
wire   [8:0] tmp_77_fu_1917_p1;
wire   [8:0] tmp_78_fu_1921_p4;
wire   [8:0] tmp_75_fu_1938_p2;
wire   [8:0] tmp_80_fu_1950_p2;
reg   [1:0] grp_fu_312_opcode;
reg   [1:0] grp_fu_317_opcode;
reg   [4:0] grp_fu_352_opcode;
reg   [4:0] grp_fu_357_opcode;
wire    ap_CS_fsm_state87;
reg    ap_block_state87;
reg   [86:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 87'd1;
#0 da_1_data_reg = 9'd0;
#0 da_1_vld_reg = 1'b0;
#0 db_1_data_reg = 9'd0;
#0 db_1_vld_reg = 1'b0;
#0 dc_1_data_reg = 9'd0;
#0 dc_1_vld_reg = 1'b0;
#0 ialfa_1_data_reg = 8'd0;
#0 ialfa_1_vld_reg = 1'b0;
#0 ibeta_1_data_reg = 8'd0;
#0 ibeta_1_vld_reg = 1'b0;
#0 dalfa_1_data_reg = 8'd0;
#0 dalfa_1_vld_reg = 1'b0;
#0 dbeta_1_data_reg = 8'd0;
#0 dbeta_1_vld_reg = 1'b0;
#0 y_integral_alfa = 32'd0;
#0 y_integral_beta = 32'd0;
#0 sat_alfa = 2'd0;
#0 y_alfa = 32'd0;
#0 y_beta = 32'd0;
end

current_control_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
current_control_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .rstIntN(rstIntN),
    .ctrlEna(ctrlEna),
    .params_Kp(params_Kp),
    .params_Ki2(params_Ki2),
    .params_y_max(params_y_max),
    .params_y_min(params_y_min)
);

current_control_fbkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
current_control_fbkb_U0(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_312_p0),
    .din1(grp_fu_312_p1),
    .opcode(grp_fu_312_opcode),
    .ce(1'b1),
    .dout(grp_fu_312_p2)
);

current_control_fbkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
current_control_fbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_317_p0),
    .din1(grp_fu_317_p1),
    .opcode(grp_fu_317_opcode),
    .ce(1'b1),
    .dout(grp_fu_317_p2)
);

current_control_fcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
current_control_fcud_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_323_p0),
    .din1(grp_fu_323_p1),
    .ce(1'b1),
    .dout(grp_fu_323_p2)
);

current_control_fcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
current_control_fcud_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_329_p0),
    .din1(grp_fu_329_p1),
    .ce(1'b1),
    .dout(grp_fu_329_p2)
);

current_control_fcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
current_control_fcud_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_337_p0),
    .din1(grp_fu_337_p1),
    .ce(1'b1),
    .dout(grp_fu_337_p2)
);

current_control_fcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
current_control_fcud_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_376),
    .din1(32'd1115684864),
    .ce(1'b1),
    .dout(grp_fu_344_p2)
);

current_control_sdEe #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
current_control_sdEe_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_349_p0),
    .ce(1'b1),
    .dout(grp_fu_349_p1)
);

current_control_feOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
current_control_feOg_U7(
    .din0(grp_fu_352_p0),
    .din1(grp_fu_352_p1),
    .opcode(grp_fu_352_opcode),
    .dout(grp_fu_352_p2)
);

current_control_feOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
current_control_feOg_U8(
    .din0(grp_fu_357_p0),
    .din1(grp_fu_357_p1),
    .opcode(grp_fu_357_opcode),
    .dout(grp_fu_357_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        x_assign_8_reg_294 <= tmp_21_fu_863_p3;
    end else if (((1'b1 == ap_CS_fsm_state45) & ((or_cond_reg_2064 == 1'd1) | (1'd1 == or_cond4_fu_532_p2)))) begin
        x_assign_8_reg_294 <= y_alfa_load_reg_2068;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        x_assign_9_reg_303 <= tmp_27_fu_920_p3;
    end else if (((1'b1 == ap_CS_fsm_state45) & ((or_cond_reg_2064 == 1'd1) | (1'd1 == or_cond4_fu_532_p2)))) begin
        x_assign_9_reg_303 <= y_beta_load_reg_2073;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        y_integral_alfa_flag_2_reg_261 <= 1'd1;
    end else if (((1'b1 == ap_CS_fsm_state45) & ((or_cond_reg_2064 == 1'd1) | (1'd1 == or_cond4_fu_532_p2)))) begin
        y_integral_alfa_flag_2_reg_261 <= not_rstIntN_reg_2044;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        y_integral_alfa_new_2_reg_272 <= y_integral_alfa_new_1_reg_2147;
    end else if (((1'b1 == ap_CS_fsm_state45) & ((or_cond_reg_2064 == 1'd1) | (1'd1 == or_cond4_fu_532_p2)))) begin
        y_integral_alfa_new_2_reg_272 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        y_integral_beta_new_2_reg_283 <= y_integral_beta_new_1_reg_2153;
    end else if (((1'b1 == ap_CS_fsm_state45) & ((or_cond_reg_2064 == 1'd1) | (1'd1 == or_cond4_fu_532_p2)))) begin
        y_integral_beta_new_2_reg_283 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        ctrlEna_read_reg_2032 <= ctrlEna;
        not_rstIntN_reg_2044 <= not_rstIntN_fu_433_p2;
        or_cond_reg_2064 <= or_cond_fu_508_p2;
        params_Ki2_read_reg_2021 <= params_Ki2;
        params_Kp_read_reg_2026 <= params_Kp;
        params_y_max_read_reg_2010 <= params_y_max;
        params_y_min_read_reg_1999 <= params_y_min;
        tmp_5_reg_2038 <= grp_fu_312_p2;
        tmp_9_reg_2059 <= tmp_9_fu_497_p2;
        y_alfa_load_reg_2068 <= y_alfa;
        y_beta_load_reg_2073 <= y_beta;
        y_integral_alfa_load_1_reg_2049 <= y_integral_alfa_load_1_fu_439_p3;
        y_integral_beta_load_1_reg_2054 <= y_integral_beta_load_1_fu_447_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == da_1_vld_in) & (1'b0 == da_1_vld_reg)) | (~((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == da_1_vld_in) & (1'b1 == da_1_vld_reg) & (1'b1 == 1'b1)))) begin
        da_1_data_reg <= tmp_71_fu_1361_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == dalfa_1_vld_in) & (1'b0 == dalfa_1_vld_reg)) | (~((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == dalfa_1_vld_in) & (1'b1 == dalfa_1_vld_reg) & (1'b1 == 1'b1)))) begin
        dalfa_1_data_reg <= p_Val2_29_fu_1377_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == db_1_vld_in) & (1'b0 == db_1_vld_reg)) | (~((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == db_1_vld_in) & (1'b1 == db_1_vld_reg) & (1'b1 == 1'b1)))) begin
        db_1_data_reg <= tmp_76_fu_1943_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == dbeta_1_vld_in) & (1'b0 == dbeta_1_vld_reg)) | (~((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == dbeta_1_vld_in) & (1'b1 == dbeta_1_vld_reg) & (1'b1 == 1'b1)))) begin
        dbeta_1_data_reg <= p_Val2_34_fu_1394_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == dc_1_vld_in) & (1'b0 == dc_1_vld_reg)) | (~((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == dc_1_vld_in) & (1'b1 == dc_1_vld_reg) & (1'b1 == 1'b1)))) begin
        dc_1_data_reg <= tmp_81_fu_1955_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == ialfa_1_vld_in) & (1'b0 == ialfa_1_vld_reg)) | (~((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == ialfa_1_vld_in) & (1'b1 == ialfa_1_vld_reg) & (1'b1 == 1'b1)))) begin
        ialfa_1_data_reg <= p_Val2_17_fu_1661_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == ibeta_1_vld_in) & (1'b0 == ibeta_1_vld_reg)) | (~((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == ibeta_1_vld_in) & (1'b1 == ibeta_1_vld_reg) & (1'b1 == 1'b1)))) begin
        ibeta_1_data_reg <= p_Val2_22_fu_1678_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        isNeg_1_reg_2389 <= sh_assign_2_fu_1716_p2[32'd8];
        isNeg_2_reg_2410 <= sh_assign_4_fu_1778_p2[32'd8];
        loc_V_3_reg_2384 <= loc_V_3_fu_1708_p1;
        loc_V_5_reg_2405 <= loc_V_5_fu_1770_p1;
        p_Result_1_reg_2379 <= p_Val2_5_fu_1686_p1[32'd31];
        p_Result_2_reg_2400 <= p_Val2_9_fu_1748_p1[32'd31];
        sh_assign_3_reg_2394 <= sh_assign_3_fu_1740_p3;
        sh_assign_5_reg_2415 <= sh_assign_5_fu_1802_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        isNeg_3_reg_2322 <= sh_assign_6_fu_1432_p2[32'd8];
        isNeg_4_reg_2348 <= sh_assign_8_fu_1482_p2[32'd8];
        loc_V_7_reg_2312 <= loc_V_7_fu_1424_p1;
        loc_V_9_reg_2338 <= loc_V_9_fu_1474_p1;
        p_Result_3_reg_2307 <= p_Val2_14_fu_1402_p1[32'd31];
        p_Result_4_reg_2333 <= p_Val2_19_fu_1452_p1[32'd31];
        sh_assign_6_reg_2317 <= sh_assign_6_fu_1432_p2;
        sh_assign_8_reg_2343 <= sh_assign_8_fu_1482_p2;
        tmp_5_i_i_i1_reg_2354 <= tmp_5_i_i_i1_fu_1496_p2;
        tmp_5_i_i_i_reg_2328 <= tmp_5_i_i_i_fu_1446_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        isNeg_5_reg_2244 <= sh_assign_s_fu_1074_p2[32'd8];
        isNeg_6_reg_2265 <= sh_assign_11_fu_1132_p2[32'd8];
        isNeg_reg_2223 <= sh_assign_fu_1016_p2[32'd8];
        loc_V_11_reg_2239 <= loc_V_11_fu_1066_p1;
        loc_V_13_reg_2260 <= loc_V_13_fu_1124_p1;
        loc_V_1_reg_2218 <= loc_V_1_fu_1008_p1;
        p_Result_5_reg_2234 <= p_Val2_24_fu_944_p1[32'd31];
        p_Result_6_reg_2255 <= p_Val2_30_fu_958_p1[32'd31];
        p_Result_s_reg_2213 <= p_Val2_s_fu_986_p1[32'd31];
        sh_assign_10_reg_2249 <= sh_assign_10_fu_1098_p3;
        sh_assign_12_reg_2270 <= sh_assign_12_fu_1156_p3;
        sh_assign_1_reg_2228 <= sh_assign_1_fu_1040_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        p_Val2_27_reg_2282 <= p_Val2_27_fu_1285_p3;
        p_Val2_32_reg_2287 <= p_Val2_32_fu_1349_p3;
        tmp_69_reg_2276 <= tmp_69_fu_1221_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        p_Val2_4_reg_2364 <= p_Val2_4_fu_1645_p3;
        p_Val2_8_reg_2359 <= p_Val2_8_fu_1570_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state15))) begin
        reg_361 <= grp_fu_349_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state78))) begin
        reg_367 <= grp_fu_323_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state39))) begin
        reg_376 <= grp_fu_323_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state42) | ((1'b1 == ap_CS_fsm_state64) & (tmp_36_reg_2122 == 1'd0) & (1'd0 == sel_tmp1_reg_2135)) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state83))) begin
        reg_384 <= grp_fu_312_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state59))) begin
        reg_392 <= grp_fu_329_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state83))) begin
        reg_399 <= grp_fu_317_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state48) | ((tmp_36_reg_2122 == 1'd0) & (1'd0 == sel_tmp1_reg_2135) & (1'b1 == ap_CS_fsm_state59)))) begin
        reg_405 <= grp_fu_323_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        sat_alfa <= storemerge1_fu_699_p3;
        y_integral_alfa_new_1_reg_2147 <= y_integral_alfa_new_1_fu_678_p3;
        y_integral_beta_new_1_reg_2153 <= y_integral_beta_new_1_fu_690_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        sel_tmp1_reg_2135 <= sel_tmp1_fu_667_p2;
        tmp_36_reg_2122 <= tmp_36_fu_611_p2;
        tmp_39_reg_2129 <= tmp_39_fu_645_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        tmp_11_reg_2091 <= grp_fu_312_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        tmp_14_reg_1994 <= grp_fu_352_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state44) & (1'd0 == or_cond_fu_508_p2))) begin
        tmp_18_reg_2083 <= grp_fu_352_p2;
        tmp_8_reg_2078 <= tmp_8_fu_522_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        tmp_19_reg_2169 <= tmp_19_fu_758_p3;
        tmp_25_reg_2176 <= tmp_25_fu_811_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        tmp_22_reg_2142 <= grp_fu_337_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        tmp_32_reg_2099 <= tmp_32_fu_583_p2;
        tmp_33_reg_2105 <= tmp_33_fu_601_p2;
        tmp_35_reg_2112 <= grp_fu_352_p2;
        tmp_41_reg_2117 <= grp_fu_357_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        tmp_47_reg_2159 <= grp_fu_352_p2;
        tmp_59_reg_2164 <= grp_fu_357_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        tmp_53_reg_2183 <= grp_fu_352_p2;
        tmp_65_reg_2188 <= grp_fu_357_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        tmp_74_reg_2421 <= tmp_74_fu_1867_p3;
        tmp_79_reg_2427 <= tmp_79_fu_1931_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        tmp_s_reg_1977 <= grp_fu_329_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        y_alfa <= tmp_21_fu_863_p3;
        y_beta <= tmp_27_fu_920_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state75) & (y_integral_alfa_flag_2_phi_fu_265_p4 == 1'd1))) begin
        y_integral_alfa <= y_integral_alfa_new_2_reg_272;
        y_integral_beta <= y_integral_beta_new_2_reg_283;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state87) & ~((1'b0 == da_1_ack_in) | (1'b0 == db_1_ack_in) | (1'b0 == dc_1_ack_in) | (1'b0 == ialfa_1_ack_in) | (1'b0 == ibeta_1_ack_in) | (1'b0 == dalfa_1_ack_in) | (1'b0 == dbeta_1_ack_in)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state87) & ~((1'b0 == da_1_ack_in) | (1'b0 == db_1_ack_in) | (1'b0 == dc_1_ack_in) | (1'b0 == ialfa_1_ack_in) | (1'b0 == ibeta_1_ack_in) | (1'b0 == dalfa_1_ack_in) | (1'b0 == dbeta_1_ack_in)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == da_1_vld_reg) | ((1'b1 == da_1_vld_reg) & (1'b1 == 1'b1)))) begin
        da_1_ack_in = 1'b1;
    end else begin
        da_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        da_1_vld_in = 1'b1;
    end else begin
        da_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == dalfa_1_vld_reg) | ((1'b1 == dalfa_1_vld_reg) & (1'b1 == 1'b1)))) begin
        dalfa_1_ack_in = 1'b1;
    end else begin
        dalfa_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        dalfa_1_vld_in = 1'b1;
    end else begin
        dalfa_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == db_1_vld_reg) | ((1'b1 == db_1_vld_reg) & (1'b1 == 1'b1)))) begin
        db_1_ack_in = 1'b1;
    end else begin
        db_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        db_1_vld_in = 1'b1;
    end else begin
        db_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == dbeta_1_vld_reg) | ((1'b1 == dbeta_1_vld_reg) & (1'b1 == 1'b1)))) begin
        dbeta_1_ack_in = 1'b1;
    end else begin
        dbeta_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        dbeta_1_vld_in = 1'b1;
    end else begin
        dbeta_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == dc_1_vld_reg) | ((1'b1 == dc_1_vld_reg) & (1'b1 == 1'b1)))) begin
        dc_1_ack_in = 1'b1;
    end else begin
        dc_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        dc_1_vld_in = 1'b1;
    end else begin
        dc_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state29))) begin
        grp_fu_312_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state66) | ((tmp_36_reg_2122 == 1'd0) & (1'd0 == sel_tmp1_reg_2135) & (1'b1 == ap_CS_fsm_state60)))) begin
        grp_fu_312_opcode = 2'd0;
    end else begin
        grp_fu_312_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        grp_fu_312_p0 = y_integral_beta_load_1_reg_2054;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_312_p0 = y_integral_alfa_load_1_reg_2049;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_fu_312_p0 = i_beta_ref;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_312_p0 = i_alfa_ref;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_312_p0 = reg_384;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_312_p0 = tmp_s_reg_1977;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state66))) begin
        grp_fu_312_p0 = reg_392;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_312_p0 = reg_376;
    end else if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_fu_312_p0 = reg_367;
    end else begin
        grp_fu_312_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        grp_fu_312_p1 = reg_392;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_fu_312_p1 = y_integral_alfa_new_1_reg_2147;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state60))) begin
        grp_fu_312_p1 = reg_405;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state29))) begin
        grp_fu_312_p1 = reg_376;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state38))) begin
        grp_fu_312_p1 = reg_367;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_312_p1 = 32'd3223322624;
    end else begin
        grp_fu_312_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state29))) begin
        grp_fu_317_opcode = 2'd1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_fu_317_opcode = 2'd0;
    end else begin
        grp_fu_317_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_fu_317_p0 = tmp_22_reg_2142;
    end else if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state29))) begin
        grp_fu_317_p0 = reg_367;
    end else begin
        grp_fu_317_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        grp_fu_317_p1 = reg_392;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_fu_317_p1 = y_integral_beta_new_1_reg_2153;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_317_p1 = reg_376;
    end else begin
        grp_fu_317_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_323_p0 = da_f_fu_972_p3;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_323_p0 = tmp_5_reg_2038;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_323_p0 = reg_399;
    end else if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_fu_323_p0 = reg_384;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_323_p0 = reg_361;
    end else begin
        grp_fu_323_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_323_p1 = 32'd3204448256;
    end else if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state56))) begin
        grp_fu_323_p1 = params_Ki2_read_reg_2021;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_323_p1 = 32'd1058262330;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_323_p1 = 32'd1051372203;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state25))) begin
        grp_fu_323_p1 = 32'd1067030938;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_323_p1 = 32'd983564288;
    end else begin
        grp_fu_323_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_329_p0 = d_beta1_fu_979_p3;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_329_p0 = reg_384;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_329_p0 = reg_367;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_329_p0 = reg_361;
    end else begin
        grp_fu_329_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_329_p1 = 32'd1063105495;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_329_p1 = params_Kp_read_reg_2026;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_329_p1 = 32'd1073741824;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_329_p1 = 32'd983564288;
    end else begin
        grp_fu_329_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_337_p0 = reg_367;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_337_p0 = tmp_5_reg_2038;
    end else begin
        grp_fu_337_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_337_p1 = 32'd1115684864;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_337_p1 = params_Kp_read_reg_2026;
    end else begin
        grp_fu_337_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_349_p0 = tmp_i8_fu_420_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_349_p0 = tmp_i3_fu_415_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_349_p0 = tmp_i_fu_410_p1;
    end else begin
        grp_fu_349_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state44) & (1'd0 == or_cond_fu_508_p2)) | (1'b1 == ap_CS_fsm_state71))) begin
        grp_fu_352_opcode = 5'd2;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state73))) begin
        grp_fu_352_opcode = 5'd4;
    end else begin
        grp_fu_352_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        grp_fu_352_p0 = tmp_19_reg_2169;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_352_p0 = tmp_11_reg_2091;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state71))) begin
        grp_fu_352_p0 = reg_384;
    end else begin
        grp_fu_352_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        grp_fu_352_p1 = params_y_max_read_reg_2010;
    end else if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state71))) begin
        grp_fu_352_p1 = params_y_min_read_reg_1999;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state44))) begin
        grp_fu_352_p1 = 32'd0;
    end else begin
        grp_fu_352_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        grp_fu_357_opcode = 5'd4;
    end else if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state71))) begin
        grp_fu_357_opcode = 5'd2;
    end else begin
        grp_fu_357_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        grp_fu_357_p0 = tmp_25_reg_2176;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        grp_fu_357_p0 = reg_399;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_357_p0 = tmp_11_reg_2091;
    end else begin
        grp_fu_357_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        grp_fu_357_p1 = params_y_min_read_reg_1999;
    end else if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state73))) begin
        grp_fu_357_p1 = params_y_max_read_reg_2010;
    end else begin
        grp_fu_357_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ialfa_1_vld_reg) | ((1'b1 == ialfa_1_vld_reg) & (1'b1 == 1'b1)))) begin
        ialfa_1_ack_in = 1'b1;
    end else begin
        ialfa_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        ialfa_1_vld_in = 1'b1;
    end else begin
        ialfa_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ibeta_1_vld_reg) | ((1'b1 == ibeta_1_vld_reg) & (1'b1 == 1'b1)))) begin
        ibeta_1_ack_in = 1'b1;
    end else begin
        ibeta_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        ibeta_1_vld_in = 1'b1;
    end else begin
        ibeta_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            if (((1'b1 == ap_CS_fsm_state45) & ((or_cond_reg_2064 == 1'd1) | (1'd1 == or_cond4_fu_532_p2)))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            if (((1'b1 == ap_CS_fsm_state87) & ~((1'b0 == da_1_ack_in) | (1'b0 == db_1_ack_in) | (1'b0 == dc_1_ack_in) | (1'b0 == ialfa_1_ack_in) | (1'b0 == ibeta_1_ack_in) | (1'b0 == dalfa_1_ack_in) | (1'b0 == dbeta_1_ack_in)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

always @ (*) begin
    ap_block_state87 = ((1'b0 == da_1_ack_in) | (1'b0 == db_1_ack_in) | (1'b0 == dc_1_ack_in) | (1'b0 == ialfa_1_ack_in) | (1'b0 == ibeta_1_ack_in) | (1'b0 == dalfa_1_ack_in) | (1'b0 == dbeta_1_ack_in));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign d_alfa_fu_954_p1 = d_alfa_neg_fu_948_p2;

assign d_alfa_neg_fu_948_p2 = (p_Val2_24_fu_944_p1 ^ 32'd2147483648);

assign d_beta1_fu_979_p3 = ((ctrlEna_read_reg_2032[0:0] === 1'b1) ? d_beta_fu_968_p1 : i_beta_ref);

assign d_beta_fu_968_p1 = d_beta_neg_fu_962_p2;

assign d_beta_neg_fu_962_p2 = (p_Val2_30_fu_958_p1 ^ 32'd2147483648);

assign da = da_1_data_reg;

assign da_f_fu_972_p3 = ((ctrlEna_read_reg_2032[0:0] === 1'b1) ? d_alfa_fu_954_p1 : i_alfa_ref);

assign dalfa = dalfa_1_data_reg;

assign db = db_1_data_reg;

assign dbeta = dbeta_1_data_reg;

assign dc = dc_1_data_reg;

assign ialfa = ialfa_1_data_reg;

assign ibeta = ibeta_1_data_reg;

assign isNeg_1_fu_1722_p3 = sh_assign_2_fu_1716_p2[32'd8];

assign isNeg_2_fu_1784_p3 = sh_assign_4_fu_1778_p2[32'd8];

assign isNeg_5_fu_1080_p3 = sh_assign_s_fu_1074_p2[32'd8];

assign isNeg_6_fu_1138_p3 = sh_assign_11_fu_1132_p2[32'd8];

assign isNeg_fu_1022_p3 = sh_assign_fu_1016_p2[32'd8];

assign loc_V_10_fu_1056_p4 = {{p_Val2_24_fu_944_p1[30:23]}};

assign loc_V_11_fu_1066_p1 = p_Val2_24_fu_944_p1[22:0];

assign loc_V_12_fu_1114_p4 = {{p_Val2_30_fu_958_p1[30:23]}};

assign loc_V_13_fu_1124_p1 = p_Val2_30_fu_958_p1[22:0];

assign loc_V_1_fu_1008_p1 = p_Val2_s_fu_986_p1[22:0];

assign loc_V_2_fu_1698_p4 = {{p_Val2_5_fu_1686_p1[30:23]}};

assign loc_V_3_fu_1708_p1 = p_Val2_5_fu_1686_p1[22:0];

assign loc_V_4_fu_1760_p4 = {{p_Val2_9_fu_1748_p1[30:23]}};

assign loc_V_5_fu_1770_p1 = p_Val2_9_fu_1748_p1[22:0];

assign loc_V_6_fu_1414_p4 = {{p_Val2_14_fu_1402_p1[30:23]}};

assign loc_V_7_fu_1424_p1 = p_Val2_14_fu_1402_p1[22:0];

assign loc_V_8_fu_1464_p4 = {{p_Val2_19_fu_1452_p1[30:23]}};

assign loc_V_9_fu_1474_p1 = p_Val2_19_fu_1452_p1[22:0];

assign loc_V_fu_998_p4 = {{p_Val2_s_fu_986_p1[30:23]}};

assign not_rstIntN_fu_433_p2 = (rstIntN ^ 1'd1);

assign notlhs1_fu_783_p2 = ((tmp_55_fu_769_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs2_fu_571_p2 = ((tmp_24_fu_540_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs3_fu_589_p2 = ((tmp_30_fu_557_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs4_fu_892_p2 = ((tmp_61_fu_878_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs5_fu_633_p2 = ((tmp_37_fu_619_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs6_fu_730_p2 = ((tmp_43_fu_716_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs8_fu_835_p2 = ((tmp_49_fu_821_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs_fu_485_p2 = ((tmp_fu_471_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs1_fu_789_p2 = ((tmp_56_fu_779_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs2_fu_577_p2 = ((tmp_26_fu_550_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs3_fu_595_p2 = ((tmp_31_fu_567_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs4_fu_898_p2 = ((tmp_62_fu_888_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs5_fu_639_p2 = ((tmp_38_fu_629_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs6_fu_736_p2 = ((tmp_44_fu_726_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs8_fu_841_p2 = ((tmp_50_fu_831_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs_fu_491_p2 = ((tmp_7_fu_481_p1 == 23'd0) ? 1'b1 : 1'b0);

assign or_cond4_fu_532_p2 = (tmp_8_reg_2078 & tmp_20_fu_528_p2);

assign or_cond_fu_508_p2 = (tmp_6_fu_459_p3 & tmp_15_fu_503_p2);

assign p_Val2_14_fu_1402_p1 = grp_fu_337_p2;

assign p_Val2_17_fu_1661_p3 = ((p_Result_3_reg_2307[0:0] === 1'b1) ? tmp_10_i_i_i_fu_1655_p2 : tmp_1_i_i_i_fu_1652_p1);

assign p_Val2_19_fu_1452_p1 = grp_fu_344_p2;

assign p_Val2_22_fu_1678_p3 = ((p_Result_4_reg_2333[0:0] === 1'b1) ? tmp_10_i_i_i1_fu_1672_p2 : tmp_1_i_i_i1_fu_1669_p1);

assign p_Val2_24_fu_944_p1 = x_assign_8_reg_294;

assign p_Val2_27_fu_1285_p3 = ((isNeg_5_reg_2244[0:0] === 1'b1) ? tmp_86_fu_1271_p1 : tmp_88_fu_1275_p4);

assign p_Val2_29_fu_1377_p3 = ((p_Result_5_reg_2234[0:0] === 1'b1) ? tmp_10_i_i_i2_fu_1371_p2 : tmp_1_i_i_i2_fu_1368_p1);

assign p_Val2_30_fu_958_p1 = x_assign_9_reg_303;

assign p_Val2_32_fu_1349_p3 = ((isNeg_6_reg_2265[0:0] === 1'b1) ? tmp_89_fu_1335_p1 : tmp_90_fu_1339_p4);

assign p_Val2_34_fu_1394_p3 = ((p_Result_6_reg_2255[0:0] === 1'b1) ? tmp_10_i_i_i3_fu_1388_p2 : tmp_1_i_i_i3_fu_1385_p1);

assign p_Val2_4_fu_1645_p3 = ((isNeg_4_reg_2348[0:0] === 1'b1) ? tmp_84_fu_1631_p1 : tmp_85_fu_1635_p4);

assign p_Val2_5_fu_1686_p1 = reg_384;

assign p_Val2_8_fu_1570_p3 = ((isNeg_3_reg_2322[0:0] === 1'b1) ? tmp_82_fu_1556_p1 : tmp_83_fu_1560_p4);

assign p_Val2_9_fu_1748_p1 = reg_399;

assign p_Val2_s_fu_986_p1 = da_f_fu_972_p3;

assign params_y_max_to_int_fu_616_p1 = params_y_max_read_reg_2010;

assign params_y_min_to_int_fu_554_p1 = params_y_min_read_reg_1999;

assign sel_tmp10_cast_fu_696_p1 = sel_tmp1_reg_2135;

assign sel_tmp1_fu_667_p2 = (tmp_42_fu_656_p2 & sel_tmp_fu_661_p2);

assign sel_tmp2_fu_673_p3 = ((sel_tmp1_reg_2135[0:0] === 1'b1) ? params_y_max_read_reg_2010 : tmp_11_reg_2091);

assign sel_tmp6_fu_684_p3 = ((sel_tmp1_reg_2135[0:0] === 1'b1) ? params_y_max_read_reg_2010 : reg_384);

assign sel_tmp_fu_661_p2 = (tmp_36_fu_611_p2 ^ 1'd1);

assign sh_assign_10_fu_1098_p3 = ((isNeg_5_fu_1080_p3[0:0] === 1'b1) ? tmp_5_i_i_i2_cast_fu_1094_p1 : sh_assign_s_fu_1074_p2);

assign sh_assign_11_cast_ca_fu_1244_p1 = $signed(sh_assign_10_reg_2249);

assign sh_assign_11_cast_fu_1241_p1 = $signed(sh_assign_10_reg_2249);

assign sh_assign_11_fu_1132_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i6_cast_fu_1128_p1));

assign sh_assign_12_fu_1156_p3 = ((isNeg_6_fu_1138_p3[0:0] === 1'b1) ? tmp_5_i_i_i3_cast_fu_1152_p1 : sh_assign_11_fu_1132_p2);

assign sh_assign_13_cast_ca_fu_1308_p1 = $signed(sh_assign_12_reg_2270);

assign sh_assign_13_cast_fu_1305_p1 = $signed(sh_assign_12_reg_2270);

assign sh_assign_1_cast_cas_fu_1180_p1 = $signed(sh_assign_1_reg_2228);

assign sh_assign_1_cast_fu_1177_p1 = $signed(sh_assign_1_reg_2228);

assign sh_assign_1_fu_1040_p3 = ((isNeg_fu_1022_p3[0:0] === 1'b1) ? tmp_12_i_i_i_cast_fu_1036_p1 : sh_assign_fu_1016_p2);

assign sh_assign_2_fu_1716_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i1_cast_fu_1712_p1));

assign sh_assign_3_cast_cas_fu_1826_p1 = $signed(sh_assign_3_reg_2394);

assign sh_assign_3_cast_fu_1823_p1 = $signed(sh_assign_3_reg_2394);

assign sh_assign_3_fu_1740_p3 = ((isNeg_1_fu_1722_p3[0:0] === 1'b1) ? tmp_12_i_i_i1_cast_fu_1736_p1 : sh_assign_2_fu_1716_p2);

assign sh_assign_4_fu_1778_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i2_cast_fu_1774_p1));

assign sh_assign_5_cast_cas_fu_1890_p1 = $signed(sh_assign_5_reg_2415);

assign sh_assign_5_cast_fu_1887_p1 = $signed(sh_assign_5_reg_2415);

assign sh_assign_5_fu_1802_p3 = ((isNeg_2_fu_1784_p3[0:0] === 1'b1) ? tmp_12_i_i_i2_cast_fu_1798_p1 : sh_assign_4_fu_1778_p2);

assign sh_assign_6_fu_1432_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i3_cast_fu_1428_p1));

assign sh_assign_7_cast_cas_fu_1528_p1 = $signed(sh_assign_7_fu_1518_p3);

assign sh_assign_7_cast_fu_1524_p1 = $signed(sh_assign_7_fu_1518_p3);

assign sh_assign_7_fu_1518_p3 = ((isNeg_3_reg_2322[0:0] === 1'b1) ? tmp_5_i_i_i_cast_fu_1515_p1 : sh_assign_6_reg_2317);

assign sh_assign_8_fu_1482_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i4_cast_fu_1478_p1));

assign sh_assign_9_cast_cas_fu_1603_p1 = $signed(sh_assign_9_fu_1593_p3);

assign sh_assign_9_cast_fu_1599_p1 = $signed(sh_assign_9_fu_1593_p3);

assign sh_assign_9_fu_1593_p3 = ((isNeg_4_reg_2348[0:0] === 1'b1) ? tmp_5_i_i_i1_cast_fu_1590_p1 : sh_assign_8_reg_2343);

assign sh_assign_fu_1016_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i_cast_fu_1012_p1));

assign sh_assign_s_fu_1074_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i5_cast_fu_1070_p1));

assign storemerge1_fu_699_p3 = ((tmp_36_reg_2122[0:0] === 1'b1) ? 2'd3 : sel_tmp10_cast_fu_696_p1);

assign tmp_101_fu_1909_p3 = tmp_14_i_i_i2_fu_1897_p2[32'd24];

assign tmp_105_fu_1548_p3 = tmp_8_i_i_i_fu_1536_p2[32'd24];

assign tmp_109_fu_1623_p3 = tmp_8_i_i_i1_fu_1611_p2[32'd24];

assign tmp_10_i_i_i1_fu_1672_p2 = (8'd0 - tmp_1_i_i_i1_fu_1669_p1);

assign tmp_10_i_i_i2_fu_1371_p2 = (8'd0 - tmp_1_i_i_i2_fu_1368_p1);

assign tmp_10_i_i_i3_fu_1388_p2 = (8'd0 - tmp_1_i_i_i3_fu_1385_p1);

assign tmp_10_i_i_i_fu_1655_p2 = (8'd0 - tmp_1_i_i_i_fu_1652_p1);

assign tmp_113_fu_1263_p3 = tmp_8_i_i_i2_fu_1251_p2[32'd24];

assign tmp_117_fu_1327_p3 = tmp_8_i_i_i3_fu_1315_p2[32'd24];

assign tmp_11_i_i_i1_cast1_fu_1819_p1 = tmp_11_i_i_i1_fu_1810_p4;

assign tmp_11_i_i_i1_fu_1810_p4 = {{{{1'd1}, {loc_V_3_reg_2384}}}, {1'd0}};

assign tmp_11_i_i_i2_cast1_fu_1883_p1 = tmp_11_i_i_i2_fu_1874_p4;

assign tmp_11_i_i_i2_fu_1874_p4 = {{{{1'd1}, {loc_V_5_reg_2405}}}, {1'd0}};

assign tmp_11_i_i_i_cast1_fu_1173_p1 = tmp_11_i_i_i_fu_1164_p4;

assign tmp_11_i_i_i_fu_1164_p4 = {{{{1'd1}, {loc_V_1_reg_2218}}}, {1'd0}};

assign tmp_11_to_int_fu_537_p1 = tmp_11_reg_2091;

assign tmp_12_i_i_i1_cast_fu_1736_p1 = $signed(tmp_12_i_i_i1_fu_1730_p2);

assign tmp_12_i_i_i1_fu_1730_p2 = (8'd127 - loc_V_2_fu_1698_p4);

assign tmp_12_i_i_i2_cast_fu_1798_p1 = $signed(tmp_12_i_i_i2_fu_1792_p2);

assign tmp_12_i_i_i2_fu_1792_p2 = (8'd127 - loc_V_4_fu_1760_p4);

assign tmp_12_i_i_i_cast_fu_1036_p1 = $signed(tmp_12_i_i_i_fu_1030_p2);

assign tmp_12_i_i_i_fu_1030_p2 = (8'd127 - loc_V_fu_998_p4);

assign tmp_13_i_i_i1_fu_1829_p1 = $unsigned(sh_assign_3_cast_fu_1823_p1);

assign tmp_13_i_i_i2_fu_1893_p1 = $unsigned(sh_assign_5_cast_fu_1887_p1);

assign tmp_13_i_i_i_fu_1183_p1 = $unsigned(sh_assign_1_cast_fu_1177_p1);

assign tmp_14_i_i_i1_fu_1833_p2 = tmp_11_i_i_i1_fu_1810_p4 >> sh_assign_3_cast_cas_fu_1826_p1;

assign tmp_14_i_i_i2_fu_1897_p2 = tmp_11_i_i_i2_fu_1874_p4 >> sh_assign_5_cast_cas_fu_1890_p1;

assign tmp_14_i_i_i_fu_1187_p2 = tmp_11_i_i_i_fu_1164_p4 >> sh_assign_1_cast_cas_fu_1180_p1;

assign tmp_15_fu_503_p2 = (tmp_9_fu_497_p2 & tmp_14_reg_1994);

assign tmp_15_i_i_i1_fu_1839_p2 = tmp_11_i_i_i1_cast1_fu_1819_p1 << tmp_13_i_i_i1_fu_1829_p1;

assign tmp_15_i_i_i2_fu_1903_p2 = tmp_11_i_i_i2_cast1_fu_1883_p1 << tmp_13_i_i_i2_fu_1893_p1;

assign tmp_15_i_i_i_fu_1193_p2 = tmp_11_i_i_i_cast1_fu_1173_p1 << tmp_13_i_i_i_fu_1183_p1;

assign tmp_17_to_int_fu_712_p1 = reg_384;

assign tmp_19_fu_758_p3 = ((tmp_48_fu_753_p2[0:0] === 1'b1) ? reg_384 : params_y_min_read_reg_1999);

assign tmp_19_to_int_fu_818_p1 = tmp_19_reg_2169;

assign tmp_1_i_i_i1_fu_1669_p1 = p_Val2_4_reg_2364;

assign tmp_1_i_i_i2_fu_1368_p1 = p_Val2_27_reg_2282;

assign tmp_1_i_i_i3_fu_1385_p1 = p_Val2_32_reg_2287;

assign tmp_1_i_i_i_fu_1652_p1 = p_Val2_8_reg_2359;

assign tmp_20_fu_528_p2 = (tmp_9_reg_2059 & tmp_18_reg_2083);

assign tmp_21_fu_863_p3 = ((tmp_54_fu_858_p2[0:0] === 1'b1) ? tmp_19_reg_2169 : params_y_max_read_reg_2010);

assign tmp_23_to_int_fu_765_p1 = reg_399;

assign tmp_24_fu_540_p4 = {{tmp_11_to_int_fu_537_p1[30:23]}};

assign tmp_25_fu_811_p3 = ((tmp_60_fu_806_p2[0:0] === 1'b1) ? reg_399 : params_y_min_read_reg_1999);

assign tmp_25_to_int_fu_875_p1 = tmp_25_reg_2176;

assign tmp_26_fu_550_p1 = tmp_11_to_int_fu_537_p1[22:0];

assign tmp_27_fu_920_p3 = ((tmp_66_fu_915_p2[0:0] === 1'b1) ? tmp_25_reg_2176 : params_y_max_read_reg_2010);

assign tmp_30_fu_557_p4 = {{params_y_min_to_int_fu_554_p1[30:23]}};

assign tmp_31_fu_567_p1 = params_y_min_to_int_fu_554_p1[22:0];

assign tmp_32_fu_583_p2 = (notrhs2_fu_577_p2 | notlhs2_fu_571_p2);

assign tmp_33_fu_601_p2 = (notrhs3_fu_595_p2 | notlhs3_fu_589_p2);

assign tmp_34_fu_607_p2 = (tmp_32_reg_2099 & tmp_33_reg_2105);

assign tmp_36_fu_611_p2 = (tmp_34_fu_607_p2 & tmp_35_reg_2112);

assign tmp_37_fu_619_p4 = {{params_y_max_to_int_fu_616_p1[30:23]}};

assign tmp_38_fu_629_p1 = params_y_max_to_int_fu_616_p1[22:0];

assign tmp_39_fu_645_p2 = (notrhs5_fu_639_p2 | notlhs5_fu_633_p2);

assign tmp_3_i_i_i1_cast1_fu_1586_p1 = tmp_3_i_i_i1_fu_1577_p4;

assign tmp_3_i_i_i1_fu_1577_p4 = {{{{1'd1}, {loc_V_9_reg_2338}}}, {1'd0}};

assign tmp_3_i_i_i2_cast1_fu_1237_p1 = tmp_3_i_i_i2_fu_1228_p4;

assign tmp_3_i_i_i2_fu_1228_p4 = {{{{1'd1}, {loc_V_11_reg_2239}}}, {1'd0}};

assign tmp_3_i_i_i3_cast1_fu_1301_p1 = tmp_3_i_i_i3_fu_1292_p4;

assign tmp_3_i_i_i3_fu_1292_p4 = {{{{1'd1}, {loc_V_13_reg_2260}}}, {1'd0}};

assign tmp_3_i_i_i_cast1_fu_1511_p1 = tmp_3_i_i_i_fu_1502_p4;

assign tmp_3_i_i_i_fu_1502_p4 = {{{{1'd1}, {loc_V_7_reg_2312}}}, {1'd0}};

assign tmp_40_fu_651_p2 = (tmp_32_reg_2099 & tmp_39_fu_645_p2);

assign tmp_42_fu_656_p2 = (tmp_40_fu_651_p2 & tmp_41_reg_2117);

assign tmp_43_fu_716_p4 = {{tmp_17_to_int_fu_712_p1[30:23]}};

assign tmp_44_fu_726_p1 = tmp_17_to_int_fu_712_p1[22:0];

assign tmp_45_fu_742_p2 = (notrhs6_fu_736_p2 | notlhs6_fu_730_p2);

assign tmp_46_fu_748_p2 = (tmp_45_fu_742_p2 & tmp_33_reg_2105);

assign tmp_48_fu_753_p2 = (tmp_46_fu_748_p2 & tmp_47_reg_2159);

assign tmp_49_fu_821_p4 = {{tmp_19_to_int_fu_818_p1[30:23]}};

assign tmp_4_to_int_fu_467_p1 = reg_384;

assign tmp_50_fu_831_p1 = tmp_19_to_int_fu_818_p1[22:0];

assign tmp_51_fu_847_p2 = (notrhs8_fu_841_p2 | notlhs8_fu_835_p2);

assign tmp_52_fu_853_p2 = (tmp_51_fu_847_p2 & tmp_39_reg_2129);

assign tmp_54_fu_858_p2 = (tmp_52_fu_853_p2 & tmp_53_reg_2183);

assign tmp_55_fu_769_p4 = {{tmp_23_to_int_fu_765_p1[30:23]}};

assign tmp_56_fu_779_p1 = tmp_23_to_int_fu_765_p1[22:0];

assign tmp_57_fu_795_p2 = (notrhs1_fu_789_p2 | notlhs1_fu_783_p2);

assign tmp_58_fu_801_p2 = (tmp_57_fu_795_p2 & tmp_33_reg_2105);

assign tmp_5_i_i_i1_cast_fu_1590_p1 = $signed(tmp_5_i_i_i1_reg_2354);

assign tmp_5_i_i_i1_fu_1496_p2 = (8'd127 - loc_V_8_fu_1464_p4);

assign tmp_5_i_i_i2_cast_fu_1094_p1 = $signed(tmp_5_i_i_i2_fu_1088_p2);

assign tmp_5_i_i_i2_fu_1088_p2 = (8'd127 - loc_V_10_fu_1056_p4);

assign tmp_5_i_i_i3_cast_fu_1152_p1 = $signed(tmp_5_i_i_i3_fu_1146_p2);

assign tmp_5_i_i_i3_fu_1146_p2 = (8'd127 - loc_V_12_fu_1114_p4);

assign tmp_5_i_i_i_cast_fu_1515_p1 = $signed(tmp_5_i_i_i_reg_2328);

assign tmp_5_i_i_i_fu_1446_p2 = (8'd127 - loc_V_6_fu_1414_p4);

assign tmp_60_fu_806_p2 = (tmp_58_fu_801_p2 & tmp_59_reg_2164);

assign tmp_61_fu_878_p4 = {{tmp_25_to_int_fu_875_p1[30:23]}};

assign tmp_62_fu_888_p1 = tmp_25_to_int_fu_875_p1[22:0];

assign tmp_63_fu_904_p2 = (notrhs4_fu_898_p2 | notlhs4_fu_892_p2);

assign tmp_64_fu_910_p2 = (tmp_63_fu_904_p2 & tmp_39_reg_2129);

assign tmp_66_fu_915_p2 = (tmp_64_fu_910_p2 & tmp_65_reg_2188);

assign tmp_67_fu_1207_p1 = tmp_87_fu_1199_p3;

assign tmp_68_fu_1211_p4 = {{tmp_15_i_i_i_fu_1193_p2[32:24]}};

assign tmp_69_fu_1221_p3 = ((isNeg_reg_2223[0:0] === 1'b1) ? tmp_67_fu_1207_p1 : tmp_68_fu_1211_p4);

assign tmp_6_fu_459_p3 = sat_alfa[32'd1];

assign tmp_70_fu_1356_p2 = (9'd0 - tmp_69_reg_2276);

assign tmp_71_fu_1361_p3 = ((p_Result_s_reg_2213[0:0] === 1'b1) ? tmp_70_fu_1356_p2 : tmp_69_reg_2276);

assign tmp_72_fu_1853_p1 = tmp_97_fu_1845_p3;

assign tmp_73_fu_1857_p4 = {{tmp_15_i_i_i1_fu_1839_p2[32:24]}};

assign tmp_74_fu_1867_p3 = ((isNeg_1_reg_2389[0:0] === 1'b1) ? tmp_72_fu_1853_p1 : tmp_73_fu_1857_p4);

assign tmp_75_fu_1938_p2 = (9'd0 - tmp_74_reg_2421);

assign tmp_76_fu_1943_p3 = ((p_Result_1_reg_2379[0:0] === 1'b1) ? tmp_75_fu_1938_p2 : tmp_74_reg_2421);

assign tmp_77_fu_1917_p1 = tmp_101_fu_1909_p3;

assign tmp_78_fu_1921_p4 = {{tmp_15_i_i_i2_fu_1903_p2[32:24]}};

assign tmp_79_fu_1931_p3 = ((isNeg_2_reg_2410[0:0] === 1'b1) ? tmp_77_fu_1917_p1 : tmp_78_fu_1921_p4);

assign tmp_7_fu_481_p1 = tmp_4_to_int_fu_467_p1[22:0];

assign tmp_7_i_i_i1_fu_1607_p1 = $unsigned(sh_assign_9_cast_fu_1599_p1);

assign tmp_7_i_i_i2_fu_1247_p1 = $unsigned(sh_assign_11_cast_fu_1241_p1);

assign tmp_7_i_i_i3_fu_1311_p1 = $unsigned(sh_assign_13_cast_fu_1305_p1);

assign tmp_7_i_i_i_fu_1532_p1 = $unsigned(sh_assign_7_cast_fu_1524_p1);

assign tmp_80_fu_1950_p2 = (9'd0 - tmp_79_reg_2427);

assign tmp_81_fu_1955_p3 = ((p_Result_2_reg_2400[0:0] === 1'b1) ? tmp_80_fu_1950_p2 : tmp_79_reg_2427);

assign tmp_82_fu_1556_p1 = tmp_105_fu_1548_p3;

assign tmp_83_fu_1560_p4 = {{tmp_i_i_i3_fu_1542_p2[30:24]}};

assign tmp_84_fu_1631_p1 = tmp_109_fu_1623_p3;

assign tmp_85_fu_1635_p4 = {{tmp_i_i_i4_fu_1617_p2[30:24]}};

assign tmp_86_fu_1271_p1 = tmp_113_fu_1263_p3;

assign tmp_87_fu_1199_p3 = tmp_14_i_i_i_fu_1187_p2[32'd24];

assign tmp_88_fu_1275_p4 = {{tmp_i_i_i5_fu_1257_p2[30:24]}};

assign tmp_89_fu_1335_p1 = tmp_117_fu_1327_p3;

assign tmp_8_fu_522_p2 = ((sat_alfa == 2'd1) ? 1'b1 : 1'b0);

assign tmp_8_i_i_i1_fu_1611_p2 = tmp_3_i_i_i1_fu_1577_p4 >> sh_assign_9_cast_cas_fu_1603_p1;

assign tmp_8_i_i_i2_fu_1251_p2 = tmp_3_i_i_i2_fu_1228_p4 >> sh_assign_11_cast_ca_fu_1244_p1;

assign tmp_8_i_i_i3_fu_1315_p2 = tmp_3_i_i_i3_fu_1292_p4 >> sh_assign_13_cast_ca_fu_1308_p1;

assign tmp_8_i_i_i_fu_1536_p2 = tmp_3_i_i_i_fu_1502_p4 >> sh_assign_7_cast_cas_fu_1528_p1;

assign tmp_90_fu_1339_p4 = {{tmp_i_i_i6_fu_1321_p2[30:24]}};

assign tmp_97_fu_1845_p3 = tmp_14_i_i_i1_fu_1833_p2[32'd24];

assign tmp_9_fu_497_p2 = (notrhs_fu_491_p2 | notlhs_fu_485_p2);

assign tmp_fu_471_p4 = {{tmp_4_to_int_fu_467_p1[30:23]}};

assign tmp_i3_fu_415_p1 = ib;

assign tmp_i8_fu_420_p1 = ic;

assign tmp_i_fu_410_p1 = ia;

assign tmp_i_i_i3_fu_1542_p2 = tmp_3_i_i_i_cast1_fu_1511_p1 << tmp_7_i_i_i_fu_1532_p1;

assign tmp_i_i_i4_fu_1617_p2 = tmp_3_i_i_i1_cast1_fu_1586_p1 << tmp_7_i_i_i1_fu_1607_p1;

assign tmp_i_i_i5_fu_1257_p2 = tmp_3_i_i_i2_cast1_fu_1237_p1 << tmp_7_i_i_i2_fu_1247_p1;

assign tmp_i_i_i6_fu_1321_p2 = tmp_3_i_i_i3_cast1_fu_1301_p1 << tmp_7_i_i_i3_fu_1311_p1;

assign tmp_i_i_i_i1_cast_fu_1712_p1 = loc_V_2_fu_1698_p4;

assign tmp_i_i_i_i2_cast_fu_1774_p1 = loc_V_4_fu_1760_p4;

assign tmp_i_i_i_i3_cast_fu_1428_p1 = loc_V_6_fu_1414_p4;

assign tmp_i_i_i_i4_cast_fu_1478_p1 = loc_V_8_fu_1464_p4;

assign tmp_i_i_i_i5_cast_fu_1070_p1 = loc_V_10_fu_1056_p4;

assign tmp_i_i_i_i6_cast_fu_1128_p1 = loc_V_12_fu_1114_p4;

assign tmp_i_i_i_i_cast_fu_1012_p1 = loc_V_fu_998_p4;

assign y_integral_alfa_flag_2_phi_fu_265_p4 = y_integral_alfa_flag_2_reg_261;

assign y_integral_alfa_load_1_fu_439_p3 = ((rstIntN[0:0] === 1'b1) ? y_integral_alfa : 32'd0);

assign y_integral_alfa_new_1_fu_678_p3 = ((tmp_36_reg_2122[0:0] === 1'b1) ? params_y_min_read_reg_1999 : sel_tmp2_fu_673_p3);

assign y_integral_beta_load_1_fu_447_p3 = ((rstIntN[0:0] === 1'b1) ? y_integral_beta : 32'd0);

assign y_integral_beta_new_1_fu_690_p3 = ((tmp_36_reg_2122[0:0] === 1'b1) ? params_y_min_read_reg_1999 : sel_tmp6_fu_684_p3);

endmodule //current_control
