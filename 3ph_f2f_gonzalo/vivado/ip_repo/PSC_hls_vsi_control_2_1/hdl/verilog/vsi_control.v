// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="vsi_control,hls_ip_2017_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.915750,HLS_SYN_LAT=60,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=16,HLS_SYN_FF=4355,HLS_SYN_LUT=6629}" *)

module vsi_control (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        va,
        vb,
        vc,
        phA,
        phB,
        phC,
        da,
        db,
        dc,
        driverEna,
        PWMthrdHarmEna,
        Vma8b,
        ma8b,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP
);

parameter    ap_ST_fsm_state1 = 72'd1;
parameter    ap_ST_fsm_state2 = 72'd2;
parameter    ap_ST_fsm_state3 = 72'd4;
parameter    ap_ST_fsm_state4 = 72'd8;
parameter    ap_ST_fsm_state5 = 72'd16;
parameter    ap_ST_fsm_state6 = 72'd32;
parameter    ap_ST_fsm_state7 = 72'd64;
parameter    ap_ST_fsm_state8 = 72'd128;
parameter    ap_ST_fsm_state9 = 72'd256;
parameter    ap_ST_fsm_state10 = 72'd512;
parameter    ap_ST_fsm_state11 = 72'd1024;
parameter    ap_ST_fsm_state12 = 72'd2048;
parameter    ap_ST_fsm_state13 = 72'd4096;
parameter    ap_ST_fsm_state14 = 72'd8192;
parameter    ap_ST_fsm_state15 = 72'd16384;
parameter    ap_ST_fsm_state16 = 72'd32768;
parameter    ap_ST_fsm_state17 = 72'd65536;
parameter    ap_ST_fsm_state18 = 72'd131072;
parameter    ap_ST_fsm_state19 = 72'd262144;
parameter    ap_ST_fsm_state20 = 72'd524288;
parameter    ap_ST_fsm_state21 = 72'd1048576;
parameter    ap_ST_fsm_state22 = 72'd2097152;
parameter    ap_ST_fsm_state23 = 72'd4194304;
parameter    ap_ST_fsm_state24 = 72'd8388608;
parameter    ap_ST_fsm_state25 = 72'd16777216;
parameter    ap_ST_fsm_state26 = 72'd33554432;
parameter    ap_ST_fsm_state27 = 72'd67108864;
parameter    ap_ST_fsm_state28 = 72'd134217728;
parameter    ap_ST_fsm_state29 = 72'd268435456;
parameter    ap_ST_fsm_state30 = 72'd536870912;
parameter    ap_ST_fsm_state31 = 72'd1073741824;
parameter    ap_ST_fsm_state32 = 72'd2147483648;
parameter    ap_ST_fsm_state33 = 72'd4294967296;
parameter    ap_ST_fsm_state34 = 72'd8589934592;
parameter    ap_ST_fsm_state35 = 72'd17179869184;
parameter    ap_ST_fsm_state36 = 72'd34359738368;
parameter    ap_ST_fsm_state37 = 72'd68719476736;
parameter    ap_ST_fsm_state38 = 72'd137438953472;
parameter    ap_ST_fsm_state39 = 72'd274877906944;
parameter    ap_ST_fsm_state40 = 72'd549755813888;
parameter    ap_ST_fsm_state41 = 72'd1099511627776;
parameter    ap_ST_fsm_state42 = 72'd2199023255552;
parameter    ap_ST_fsm_state43 = 72'd4398046511104;
parameter    ap_ST_fsm_state44 = 72'd8796093022208;
parameter    ap_ST_fsm_state45 = 72'd17592186044416;
parameter    ap_ST_fsm_state46 = 72'd35184372088832;
parameter    ap_ST_fsm_state47 = 72'd70368744177664;
parameter    ap_ST_fsm_state48 = 72'd140737488355328;
parameter    ap_ST_fsm_state49 = 72'd281474976710656;
parameter    ap_ST_fsm_state50 = 72'd562949953421312;
parameter    ap_ST_fsm_state51 = 72'd1125899906842624;
parameter    ap_ST_fsm_state52 = 72'd2251799813685248;
parameter    ap_ST_fsm_state53 = 72'd4503599627370496;
parameter    ap_ST_fsm_state54 = 72'd9007199254740992;
parameter    ap_ST_fsm_state55 = 72'd18014398509481984;
parameter    ap_ST_fsm_state56 = 72'd36028797018963968;
parameter    ap_ST_fsm_state57 = 72'd72057594037927936;
parameter    ap_ST_fsm_state58 = 72'd144115188075855872;
parameter    ap_ST_fsm_state59 = 72'd288230376151711744;
parameter    ap_ST_fsm_state60 = 72'd576460752303423488;
parameter    ap_ST_fsm_state61 = 72'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 72'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 72'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 72'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 72'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 72'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 72'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 72'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 72'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 72'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 72'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 72'd2361183241434822606848;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [11:0] va;
input  [11:0] vb;
input  [11:0] vc;
input  [31:0] phA;
input  [31:0] phB;
input  [31:0] phC;
output  [8:0] da;
output  [8:0] db;
output  [8:0] dc;
output  [0:0] driverEna;
output  [0:0] PWMthrdHarmEna;
output  [7:0] Vma8b;
output  [7:0] ma8b;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[0:0] driverEna;
reg[0:0] PWMthrdHarmEna;

reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [71:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] rstIntN;
wire   [0:0] ctrlByp;
wire   [31:0] params_vRef;
wire   [31:0] params_Kp;
wire   [31:0] params_Ki2;
wire   [31:0] params_Kd;
wire   [31:0] params_y_max;
wire   [31:0] params_y_min;
wire   [0:0] outEna;
wire   [0:0] thrdHarmEna;
reg   [8:0] da_1_data_reg;
reg    da_1_vld_reg;
reg    da_1_vld_in;
reg    da_1_ack_in;
reg   [8:0] db_1_data_reg;
reg    db_1_vld_reg;
reg    db_1_vld_in;
reg    db_1_ack_in;
reg   [8:0] dc_1_data_reg;
reg    dc_1_vld_reg;
reg    dc_1_vld_in;
reg    dc_1_ack_in;
reg   [7:0] Vma8b_1_data_reg;
reg    Vma8b_1_vld_reg;
reg    Vma8b_1_vld_in;
reg    Vma8b_1_ack_in;
reg   [7:0] ma8b_1_data_reg;
reg    ma8b_1_vld_reg;
reg    ma8b_1_vld_in;
reg    ma8b_1_ack_in;
reg   [31:0] e;
reg   [31:0] y_integral;
reg   [1:0] sat;
reg   [31:0] y;
wire   [31:0] grp_fu_341_p1;
reg   [31:0] reg_356;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state11;
wire   [31:0] grp_fu_320_p2;
reg   [31:0] reg_361;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state49;
wire   [31:0] grp_fu_325_p2;
reg   [31:0] reg_367;
wire    ap_CS_fsm_state19;
wire   [31:0] grp_fu_309_p2;
reg   [31:0] reg_376;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state33;
reg   [31:0] reg_383;
wire    ap_CS_fsm_state24;
reg   [31:0] reg_389;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state61;
wire   [31:0] tmp_i_fu_398_p1;
wire   [31:0] grp_fu_344_p1;
reg   [31:0] tmp_i2_reg_1468;
wire   [31:0] tmp_i6_fu_408_p1;
wire   [31:0] grp_fu_314_p2;
reg   [31:0] tmp_53_i4_reg_1478;
reg   [0:0] thrdHarmEna_read_reg_1483;
wire    ap_CS_fsm_state34;
reg   [0:0] outEna_read_reg_1488;
reg   [31:0] params_y_min_read_reg_1493;
reg   [31:0] params_y_max_read_reg_1501;
reg   [31:0] params_Kd_read_reg_1510;
reg   [31:0] params_Ki2_read_reg_1515;
reg   [31:0] params_Kp_read_reg_1520;
reg   [31:0] params_vRef_read_reg_1525;
reg   [0:0] ctrlByp_read_reg_1531;
reg   [0:0] rstIntN_read_reg_1536;
wire   [0:0] grp_fu_347_p2;
reg   [0:0] tmp_12_reg_1542;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
reg   [31:0] e1_reg_1562;
wire   [0:0] not_rstIntN_fu_427_p2;
reg   [0:0] not_rstIntN_reg_1567;
wire   [31:0] y_integral_load_s_fu_432_p3;
reg   [31:0] y_integral_load_s_reg_1572;
wire   [0:0] tmp_11_fu_481_p2;
reg   [0:0] tmp_11_reg_1577;
wire   [0:0] or_cond_fu_492_p2;
reg   [0:0] or_cond_reg_1582;
wire   [0:0] tmp_1_fu_498_p2;
reg   [0:0] tmp_1_reg_1586;
reg   [0:0] tmp_19_reg_1591;
wire   [0:0] or_cond4_fu_508_p2;
reg   [0:0] or_cond4_reg_1596;
wire    ap_CS_fsm_state41;
wire   [0:0] tmp_25_fu_560_p2;
reg   [0:0] tmp_25_reg_1600;
wire    ap_CS_fsm_state50;
wire   [0:0] tmp_26_fu_578_p2;
reg   [0:0] tmp_26_reg_1606;
reg   [0:0] tmp_28_reg_1612;
wire   [0:0] tmp_32_fu_613_p2;
reg   [0:0] tmp_32_reg_1617;
wire   [0:0] tmp_34_fu_352_p2;
reg   [0:0] tmp_34_reg_1623;
wire   [31:0] y_integral_new_1_fu_656_p3;
reg   [31:0] y_integral_new_1_reg_1628;
wire    ap_CS_fsm_state51;
reg   [0:0] tmp_40_reg_1634;
wire    ap_CS_fsm_state62;
wire   [31:0] tmp_16_fu_727_p3;
reg   [31:0] tmp_16_reg_1639;
wire    ap_CS_fsm_state63;
reg   [0:0] tmp_46_reg_1646;
wire    ap_CS_fsm_state64;
wire   [31:0] ma_1_fu_795_p3;
wire    ap_CS_fsm_state66;
wire   [22:0] loc_V_1_fu_819_p1;
reg   [22:0] loc_V_1_reg_1659;
wire    ap_CS_fsm_state68;
wire   [8:0] sh_assign_fu_827_p2;
reg   [8:0] sh_assign_reg_1664;
reg   [0:0] isNeg_reg_1669;
wire   [7:0] tmp_35_i_i_i_fu_841_p2;
reg   [7:0] tmp_35_i_i_i_reg_1675;
wire   [7:0] p_Val2_3_fu_915_p3;
wire    ap_CS_fsm_state69;
wire   [22:0] loc_V_3_fu_937_p1;
reg   [22:0] loc_V_3_reg_1685;
wire   [8:0] sh_assign_2_fu_945_p2;
reg   [8:0] sh_assign_2_reg_1690;
reg   [0:0] isNeg_1_reg_1695;
wire   [7:0] tmp_35_i_i_i1_fu_959_p2;
reg   [7:0] tmp_35_i_i_i1_reg_1701;
reg   [0:0] p_Result_s_reg_1706;
wire   [22:0] loc_V_5_fu_987_p1;
reg   [22:0] loc_V_5_reg_1711;
wire   [8:0] sh_assign_4_fu_995_p2;
reg   [8:0] sh_assign_4_reg_1716;
reg   [0:0] isNeg_2_reg_1721;
wire   [7:0] tmp_43_i_i_i_fu_1009_p2;
reg   [7:0] tmp_43_i_i_i_reg_1727;
reg   [0:0] p_Result_1_reg_1732;
wire   [22:0] loc_V_7_fu_1037_p1;
reg   [22:0] loc_V_7_reg_1737;
wire   [8:0] sh_assign_6_fu_1045_p2;
reg   [8:0] sh_assign_6_reg_1742;
reg   [0:0] isNeg_3_reg_1747;
wire   [7:0] tmp_43_i_i_i1_fu_1059_p2;
reg   [7:0] tmp_43_i_i_i1_reg_1753;
reg   [0:0] p_Result_2_reg_1758;
wire   [22:0] loc_V_9_fu_1087_p1;
reg   [22:0] loc_V_9_reg_1763;
wire   [8:0] sh_assign_8_fu_1095_p2;
reg   [8:0] sh_assign_8_reg_1768;
reg   [0:0] isNeg_4_reg_1773;
wire   [7:0] tmp_43_i_i_i2_fu_1109_p2;
reg   [7:0] tmp_43_i_i_i2_reg_1779;
wire   [7:0] p_Val2_7_fu_1183_p3;
wire    ap_CS_fsm_state70;
wire   [8:0] tmp_56_fu_1259_p3;
reg   [8:0] tmp_56_reg_1789;
wire   [8:0] tmp_59_fu_1334_p3;
reg   [8:0] tmp_59_reg_1795;
wire   [8:0] tmp_65_fu_1409_p3;
reg   [8:0] tmp_65_reg_1801;
wire   [8:0] tmp_53_fu_1421_p3;
wire    ap_CS_fsm_state71;
wire   [8:0] tmp_61_fu_1433_p3;
wire   [8:0] tmp_67_fu_1445_p3;
wire   [0:0] y_integral_flag_2_phi_fu_291_p4;
reg   [0:0] y_integral_flag_2_reg_287;
wire    ap_CS_fsm_state65;
reg   [31:0] y_integral_new_2_reg_298;
wire    ap_CS_fsm_state72;
reg    ap_block_state72;
wire   [1:0] storemerge1_fu_667_p3;
wire   [31:0] tmp_18_fu_779_p3;
reg   [0:0] PWMthrdHarmEna_preg;
reg   [0:0] driverEna_preg;
reg   [31:0] grp_fu_309_p0;
reg   [31:0] grp_fu_309_p1;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state57;
reg   [31:0] grp_fu_320_p0;
reg   [31:0] grp_fu_320_p1;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state46;
reg   [31:0] grp_fu_325_p0;
reg   [31:0] grp_fu_325_p1;
reg   [31:0] grp_fu_341_p0;
wire   [31:0] grp_fu_344_p0;
reg   [31:0] grp_fu_347_p0;
reg   [31:0] grp_fu_347_p1;
wire   [31:0] tmp_8_to_int_fu_451_p1;
wire   [7:0] tmp_fu_455_p4;
wire   [22:0] tmp_9_fu_465_p1;
wire   [0:0] notrhs_fu_475_p2;
wire   [0:0] notlhs_fu_469_p2;
wire   [0:0] tmp_2_fu_443_p3;
wire   [0:0] tmp_17_fu_487_p2;
wire   [0:0] tmp_20_fu_504_p2;
wire   [31:0] tmp_10_to_int_fu_513_p1;
wire   [31:0] params_y_min_to_int_fu_531_p1;
wire   [7:0] tmp_21_fu_517_p4;
wire   [22:0] tmp_22_fu_527_p1;
wire   [0:0] notrhs2_fu_554_p2;
wire   [0:0] notlhs2_fu_548_p2;
wire   [7:0] tmp_23_fu_534_p4;
wire   [22:0] tmp_24_fu_544_p1;
wire   [0:0] notrhs3_fu_572_p2;
wire   [0:0] notlhs3_fu_566_p2;
wire   [31:0] params_y_max_to_int_fu_584_p1;
wire   [7:0] tmp_30_fu_587_p4;
wire   [22:0] tmp_31_fu_597_p1;
wire   [0:0] notrhs5_fu_607_p2;
wire   [0:0] notlhs5_fu_601_p2;
wire   [0:0] tmp_27_fu_619_p2;
wire   [0:0] tmp_33_fu_628_p2;
wire   [0:0] tmp_29_fu_623_p2;
wire   [0:0] tmp_35_fu_632_p2;
wire   [0:0] sel_tmp_fu_637_p2;
wire   [0:0] sel_tmp1_fu_643_p2;
wire   [31:0] sel_tmp2_fu_649_p3;
wire   [1:0] sel_tmp6_cast_fu_663_p1;
wire   [31:0] tmp_16_to_int_fu_681_p1;
wire   [7:0] tmp_36_fu_685_p4;
wire   [22:0] tmp_37_fu_695_p1;
wire   [0:0] notrhs6_fu_705_p2;
wire   [0:0] notlhs6_fu_699_p2;
wire   [0:0] tmp_38_fu_711_p2;
wire   [0:0] tmp_39_fu_717_p2;
wire   [0:0] tmp_41_fu_722_p2;
wire   [31:0] tmp_18_to_int_fu_734_p1;
wire   [7:0] tmp_42_fu_737_p4;
wire   [22:0] tmp_43_fu_747_p1;
wire   [0:0] notrhs8_fu_757_p2;
wire   [0:0] notlhs8_fu_751_p2;
wire   [0:0] tmp_44_fu_763_p2;
wire   [0:0] tmp_45_fu_769_p2;
wire   [0:0] tmp_47_fu_774_p2;
wire   [31:0] p_Val2_s_fu_805_p1;
wire   [7:0] loc_V_fu_809_p4;
wire   [8:0] tmp_i_i_i_i_cast_fu_823_p1;
wire   [24:0] tmp_34_i_i_i_fu_847_p4;
wire  signed [8:0] tmp_35_i_i_i_cast_fu_860_p1;
wire   [8:0] sh_assign_1_fu_863_p3;
wire  signed [31:0] sh_assign_1_cast_fu_869_p1;
wire  signed [24:0] sh_assign_1_cast_cas_fu_873_p1;
wire   [54:0] tmp_34_i_i_i_cast1_fu_856_p1;
wire   [54:0] tmp_36_i_i_i_fu_877_p1;
wire   [24:0] tmp_37_i_i_i_fu_881_p2;
wire   [0:0] tmp_64_fu_893_p3;
wire   [54:0] tmp_38_i_i_i_fu_887_p2;
wire   [7:0] tmp_48_fu_901_p1;
wire   [7:0] tmp_49_fu_905_p4;
wire   [31:0] p_Val2_4_fu_923_p1;
wire   [7:0] loc_V_2_fu_927_p4;
wire   [8:0] tmp_i_i_i_i1_cast_fu_941_p1;
wire   [31:0] p_Val2_8_fu_965_p1;
wire   [7:0] loc_V_4_fu_977_p4;
wire   [8:0] tmp_i_i_i_i2_cast_fu_991_p1;
wire   [31:0] grp_fu_333_p2;
wire   [31:0] p_Val2_10_fu_1015_p1;
wire   [7:0] loc_V_6_fu_1027_p4;
wire   [8:0] tmp_i_i_i_i3_cast_fu_1041_p1;
wire   [31:0] grp_fu_337_p2;
wire   [31:0] p_Val2_12_fu_1065_p1;
wire   [7:0] loc_V_8_fu_1077_p4;
wire   [8:0] tmp_i_i_i_i4_cast8_fu_1091_p1;
wire   [24:0] tmp_34_i_i_i1_fu_1115_p4;
wire  signed [8:0] tmp_35_i_i_i1_cast_fu_1128_p1;
wire   [8:0] sh_assign_3_fu_1131_p3;
wire  signed [31:0] sh_assign_3_cast_fu_1137_p1;
wire  signed [24:0] sh_assign_3_cast_cas_fu_1141_p1;
wire   [54:0] tmp_34_i_i_i1_cast1_fu_1124_p1;
wire   [54:0] tmp_36_i_i_i1_fu_1145_p1;
wire   [24:0] tmp_37_i_i_i1_fu_1149_p2;
wire   [0:0] tmp_72_fu_1161_p3;
wire   [54:0] tmp_38_i_i_i1_fu_1155_p2;
wire   [7:0] tmp_51_fu_1169_p1;
wire   [7:0] tmp_52_fu_1173_p4;
wire   [24:0] tmp_42_i_i_i_fu_1191_p4;
wire  signed [8:0] tmp_43_i_i_i_cast_fu_1204_p1;
wire   [8:0] sh_assign_5_fu_1207_p3;
wire  signed [31:0] sh_assign_5_cast_fu_1213_p1;
wire  signed [24:0] sh_assign_5_cast_cas_fu_1217_p1;
wire   [62:0] tmp_42_i_i_i_cast1_fu_1200_p1;
wire   [62:0] tmp_44_i_i_i_fu_1221_p1;
wire   [24:0] tmp_45_i_i_i_fu_1225_p2;
wire   [0:0] tmp_76_fu_1237_p3;
wire   [62:0] tmp_46_i_i_i_fu_1231_p2;
wire   [8:0] tmp_54_fu_1245_p1;
wire   [8:0] tmp_55_fu_1249_p4;
wire   [24:0] tmp_42_i_i_i1_fu_1266_p4;
wire  signed [8:0] tmp_43_i_i_i1_cast_fu_1279_p1;
wire   [8:0] sh_assign_7_fu_1282_p3;
wire  signed [31:0] sh_assign_7_cast_fu_1288_p1;
wire  signed [24:0] sh_assign_7_cast_cas_fu_1292_p1;
wire   [62:0] tmp_42_i_i_i1_cast1_fu_1275_p1;
wire   [62:0] tmp_44_i_i_i1_fu_1296_p1;
wire   [24:0] tmp_45_i_i_i1_fu_1300_p2;
wire   [0:0] tmp_80_fu_1312_p3;
wire   [62:0] tmp_46_i_i_i1_fu_1306_p2;
wire   [8:0] tmp_57_fu_1320_p1;
wire   [8:0] tmp_58_fu_1324_p4;
wire   [24:0] tmp_42_i_i_i2_fu_1341_p4;
wire  signed [8:0] tmp_43_i_i_i2_cast_fu_1354_p1;
wire   [8:0] sh_assign_9_fu_1357_p3;
wire  signed [31:0] sh_assign_9_cast_fu_1363_p1;
wire  signed [24:0] sh_assign_9_cast_cas_fu_1367_p1;
wire   [62:0] tmp_42_i_i_i2_cast9_fu_1350_p1;
wire   [62:0] tmp_44_i_i_i2_fu_1371_p1;
wire   [24:0] tmp_45_i_i_i2_fu_1375_p2;
wire   [0:0] tmp_84_fu_1387_p3;
wire   [62:0] tmp_46_i_i_i2_fu_1381_p2;
wire   [8:0] tmp_62_fu_1395_p1;
wire   [8:0] tmp_63_fu_1399_p4;
wire   [8:0] tmp_50_fu_1416_p2;
wire   [8:0] tmp_60_fu_1428_p2;
wire   [8:0] tmp_66_fu_1440_p2;
reg   [1:0] grp_fu_309_opcode;
reg   [4:0] grp_fu_347_opcode;
reg   [71:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 72'd1;
#0 da_1_data_reg = 9'd0;
#0 da_1_vld_reg = 1'b0;
#0 db_1_data_reg = 9'd0;
#0 db_1_vld_reg = 1'b0;
#0 dc_1_data_reg = 9'd0;
#0 dc_1_vld_reg = 1'b0;
#0 Vma8b_1_data_reg = 8'd0;
#0 Vma8b_1_vld_reg = 1'b0;
#0 ma8b_1_data_reg = 8'd0;
#0 ma8b_1_vld_reg = 1'b0;
#0 e = 32'd0;
#0 y_integral = 32'd0;
#0 sat = 2'd0;
#0 y = 32'd0;
#0 PWMthrdHarmEna_preg = 1'd0;
#0 driverEna_preg = 1'd0;
end

vsi_control_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
vsi_control_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .rstIntN(rstIntN),
    .ctrlByp(ctrlByp),
    .params_vRef(params_vRef),
    .params_Kp(params_Kp),
    .params_Ki2(params_Ki2),
    .params_Kd(params_Kd),
    .params_y_max(params_y_max),
    .params_y_min(params_y_min),
    .outEna(outEna),
    .thrdHarmEna(thrdHarmEna)
);

vsi_control_faddfbkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
vsi_control_faddfbkb_U0(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_309_p0),
    .din1(grp_fu_309_p1),
    .opcode(grp_fu_309_opcode),
    .ce(1'b1),
    .dout(grp_fu_309_p2)
);

vsi_control_fadd_cud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
vsi_control_fadd_cud_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_367),
    .din1(32'd3223322624),
    .ce(1'b1),
    .dout(grp_fu_314_p2)
);

vsi_control_fmul_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
vsi_control_fmul_dEe_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_320_p0),
    .din1(grp_fu_320_p1),
    .ce(1'b1),
    .dout(grp_fu_320_p2)
);

vsi_control_fmul_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
vsi_control_fmul_dEe_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_325_p0),
    .din1(grp_fu_325_p1),
    .ce(1'b1),
    .dout(grp_fu_325_p2)
);

vsi_control_fmul_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
vsi_control_fmul_dEe_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(ma_1_fu_795_p3),
    .din1(phB),
    .ce(1'b1),
    .dout(grp_fu_333_p2)
);

vsi_control_fmul_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
vsi_control_fmul_dEe_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(ma_1_fu_795_p3),
    .din1(phC),
    .ce(1'b1),
    .dout(grp_fu_337_p2)
);

vsi_control_sitofeOg #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
vsi_control_sitofeOg_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_341_p0),
    .ce(1'b1),
    .dout(grp_fu_341_p1)
);

vsi_control_sitofeOg #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
vsi_control_sitofeOg_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_344_p0),
    .ce(1'b1),
    .dout(grp_fu_344_p1)
);

vsi_control_fcmp_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
vsi_control_fcmp_fYi_U8(
    .din0(grp_fu_347_p0),
    .din1(grp_fu_347_p1),
    .opcode(grp_fu_347_opcode),
    .dout(grp_fu_347_p2)
);

vsi_control_fcmp_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
vsi_control_fcmp_fYi_U9(
    .din0(reg_389),
    .din1(params_y_max_read_reg_1501),
    .opcode(5'd2),
    .dout(tmp_34_fu_352_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        PWMthrdHarmEna_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state65)) begin
            PWMthrdHarmEna_preg <= thrdHarmEna_read_reg_1483;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        driverEna_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state65)) begin
            driverEna_preg <= outEna_read_reg_1488;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_1582 == 1'd0) & (1'b1 == ap_CS_fsm_state65) & (1'd0 == or_cond4_reg_1596))) begin
        y_integral_flag_2_reg_287 <= 1'd1;
    end else if (((1'b1 == ap_CS_fsm_state41) & ((or_cond_reg_1582 == 1'd1) | (or_cond4_fu_508_p2 == 1'd1)))) begin
        y_integral_flag_2_reg_287 <= not_rstIntN_reg_1567;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_1582 == 1'd0) & (1'b1 == ap_CS_fsm_state65) & (1'd0 == or_cond4_reg_1596))) begin
        y_integral_new_2_reg_298 <= y_integral_new_1_reg_1628;
    end else if (((1'b1 == ap_CS_fsm_state41) & ((or_cond_reg_1582 == 1'd1) | (or_cond4_fu_508_p2 == 1'd1)))) begin
        y_integral_new_2_reg_298 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == Vma8b_1_vld_in) & (1'b0 == Vma8b_1_vld_reg)) | (~((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == Vma8b_1_vld_in) & (1'b1 == Vma8b_1_vld_reg) & (1'b1 == 1'b1)))) begin
        Vma8b_1_data_reg <= p_Val2_3_fu_915_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        ctrlByp_read_reg_1531 <= ctrlByp;
        outEna_read_reg_1488 <= outEna;
        params_Kd_read_reg_1510 <= params_Kd;
        params_Ki2_read_reg_1515 <= params_Ki2;
        params_Kp_read_reg_1520 <= params_Kp;
        params_vRef_read_reg_1525 <= params_vRef;
        params_y_max_read_reg_1501 <= params_y_max;
        params_y_min_read_reg_1493 <= params_y_min;
        rstIntN_read_reg_1536 <= rstIntN;
        thrdHarmEna_read_reg_1483 <= thrdHarmEna;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == da_1_vld_in) & (1'b0 == da_1_vld_reg)) | (~((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == da_1_vld_in) & (1'b1 == da_1_vld_reg) & (1'b1 == 1'b1)))) begin
        da_1_data_reg <= tmp_53_fu_1421_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == db_1_vld_in) & (1'b0 == db_1_vld_reg)) | (~((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == db_1_vld_in) & (1'b1 == db_1_vld_reg) & (1'b1 == 1'b1)))) begin
        db_1_data_reg <= tmp_61_fu_1433_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == dc_1_vld_in) & (1'b0 == dc_1_vld_reg)) | (~((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == dc_1_vld_in) & (1'b1 == dc_1_vld_reg) & (1'b1 == 1'b1)))) begin
        dc_1_data_reg <= tmp_67_fu_1445_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        e <= reg_389;
        e1_reg_1562 <= e;
        not_rstIntN_reg_1567 <= not_rstIntN_fu_427_p2;
        or_cond_reg_1582 <= or_cond_fu_492_p2;
        tmp_11_reg_1577 <= tmp_11_fu_481_p2;
        y_integral_load_s_reg_1572 <= y_integral_load_s_fu_432_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        isNeg_1_reg_1695 <= sh_assign_2_fu_945_p2[32'd8];
        isNeg_2_reg_1721 <= sh_assign_4_fu_995_p2[32'd8];
        isNeg_3_reg_1747 <= sh_assign_6_fu_1045_p2[32'd8];
        isNeg_4_reg_1773 <= sh_assign_8_fu_1095_p2[32'd8];
        loc_V_3_reg_1685 <= loc_V_3_fu_937_p1;
        loc_V_5_reg_1711 <= loc_V_5_fu_987_p1;
        loc_V_7_reg_1737 <= loc_V_7_fu_1037_p1;
        loc_V_9_reg_1763 <= loc_V_9_fu_1087_p1;
        p_Result_1_reg_1732 <= p_Val2_10_fu_1015_p1[32'd31];
        p_Result_2_reg_1758 <= p_Val2_12_fu_1065_p1[32'd31];
        p_Result_s_reg_1706 <= p_Val2_8_fu_965_p1[32'd31];
        sh_assign_2_reg_1690 <= sh_assign_2_fu_945_p2;
        sh_assign_4_reg_1716 <= sh_assign_4_fu_995_p2;
        sh_assign_6_reg_1742 <= sh_assign_6_fu_1045_p2;
        sh_assign_8_reg_1768 <= sh_assign_8_fu_1095_p2;
        tmp_35_i_i_i1_reg_1701 <= tmp_35_i_i_i1_fu_959_p2;
        tmp_43_i_i_i1_reg_1753 <= tmp_43_i_i_i1_fu_1059_p2;
        tmp_43_i_i_i2_reg_1779 <= tmp_43_i_i_i2_fu_1109_p2;
        tmp_43_i_i_i_reg_1727 <= tmp_43_i_i_i_fu_1009_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        isNeg_reg_1669 <= sh_assign_fu_827_p2[32'd8];
        loc_V_1_reg_1659 <= loc_V_1_fu_819_p1;
        sh_assign_reg_1664 <= sh_assign_fu_827_p2;
        tmp_35_i_i_i_reg_1675 <= tmp_35_i_i_i_fu_841_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == ma8b_1_vld_in) & (1'b0 == ma8b_1_vld_reg)) | (~((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == ma8b_1_vld_in) & (1'b1 == ma8b_1_vld_reg) & (1'b1 == 1'b1)))) begin
        ma8b_1_data_reg <= p_Val2_7_fu_1183_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state41) & (or_cond_reg_1582 == 1'd0))) begin
        or_cond4_reg_1596 <= or_cond4_fu_508_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_356 <= grp_fu_341_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state49))) begin
        reg_361 <= grp_fu_320_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state19))) begin
        reg_367 <= grp_fu_325_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state33))) begin
        reg_376 <= grp_fu_309_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state24))) begin
        reg_383 <= grp_fu_320_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state61))) begin
        reg_389 <= grp_fu_309_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        sat <= storemerge1_fu_667_p3;
        y_integral_new_1_reg_1628 <= y_integral_new_1_fu_656_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        tmp_12_reg_1542 <= grp_fu_347_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        tmp_16_reg_1639 <= tmp_16_fu_727_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) & (or_cond_fu_492_p2 == 1'd0))) begin
        tmp_19_reg_1591 <= grp_fu_347_p2;
        tmp_1_reg_1586 <= tmp_1_fu_498_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        tmp_25_reg_1600 <= tmp_25_fu_560_p2;
        tmp_26_reg_1606 <= tmp_26_fu_578_p2;
        tmp_28_reg_1612 <= grp_fu_347_p2;
        tmp_32_reg_1617 <= tmp_32_fu_613_p2;
        tmp_34_reg_1623 <= tmp_34_fu_352_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        tmp_40_reg_1634 <= grp_fu_347_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        tmp_46_reg_1646 <= grp_fu_347_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_53_i4_reg_1478 <= grp_fu_314_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        tmp_56_reg_1789 <= tmp_56_fu_1259_p3;
        tmp_59_reg_1795 <= tmp_59_fu_1334_p3;
        tmp_65_reg_1801 <= tmp_65_fu_1409_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_i2_reg_1468 <= grp_fu_344_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_1582 == 1'd0) & (1'b1 == ap_CS_fsm_state65) & (1'd0 == or_cond4_reg_1596))) begin
        y <= tmp_18_fu_779_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state72) & ~((1'b0 == da_1_ack_in) | (1'b0 == db_1_ack_in) | (1'b0 == dc_1_ack_in) | (1'b0 == Vma8b_1_ack_in) | (1'b0 == ma8b_1_ack_in)) & (y_integral_flag_2_phi_fu_291_p4 == 1'd1))) begin
        y_integral <= y_integral_new_2_reg_298;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        PWMthrdHarmEna = thrdHarmEna_read_reg_1483;
    end else begin
        PWMthrdHarmEna = PWMthrdHarmEna_preg;
    end
end

always @ (*) begin
    if (((1'b0 == Vma8b_1_vld_reg) | ((1'b1 == Vma8b_1_vld_reg) & (1'b1 == 1'b1)))) begin
        Vma8b_1_ack_in = 1'b1;
    end else begin
        Vma8b_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        Vma8b_1_vld_in = 1'b1;
    end else begin
        Vma8b_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state72) & ~((1'b0 == da_1_ack_in) | (1'b0 == db_1_ack_in) | (1'b0 == dc_1_ack_in) | (1'b0 == Vma8b_1_ack_in) | (1'b0 == ma8b_1_ack_in)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state72) & ~((1'b0 == da_1_ack_in) | (1'b0 == db_1_ack_in) | (1'b0 == dc_1_ack_in) | (1'b0 == Vma8b_1_ack_in) | (1'b0 == ma8b_1_ack_in)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == da_1_vld_reg) | ((1'b1 == da_1_vld_reg) & (1'b1 == 1'b1)))) begin
        da_1_ack_in = 1'b1;
    end else begin
        da_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        da_1_vld_in = 1'b1;
    end else begin
        da_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == db_1_vld_reg) | ((1'b1 == db_1_vld_reg) & (1'b1 == 1'b1)))) begin
        db_1_ack_in = 1'b1;
    end else begin
        db_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        db_1_vld_in = 1'b1;
    end else begin
        db_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == dc_1_vld_reg) | ((1'b1 == dc_1_vld_reg) & (1'b1 == 1'b1)))) begin
        dc_1_ack_in = 1'b1;
    end else begin
        dc_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        dc_1_vld_in = 1'b1;
    end else begin
        dc_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        driverEna = outEna_read_reg_1488;
    end else begin
        driverEna = driverEna_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | ((1'b1 == ap_CS_fsm_state41) & (or_cond_reg_1582 == 1'd0) & (1'd0 == or_cond4_fu_508_p2)))) begin
        grp_fu_309_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state57))) begin
        grp_fu_309_opcode = 2'd0;
    end else begin
        grp_fu_309_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        grp_fu_309_p0 = reg_367;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_309_p0 = y_integral_load_s_reg_1572;
    end else if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state57))) begin
        grp_fu_309_p0 = reg_389;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_309_p0 = params_vRef;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_309_p0 = reg_376;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_309_p0 = reg_361;
    end else begin
        grp_fu_309_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        grp_fu_309_p1 = y_integral_new_1_reg_1628;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_309_p1 = e1_reg_1562;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_309_p1 = reg_376;
    end else if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state57))) begin
        grp_fu_309_p1 = reg_361;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_309_p1 = reg_367;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_309_p1 = 32'd3223322624;
    end else begin
        grp_fu_309_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_fu_320_p0 = ma_1_fu_795_p3;
    end else if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state46))) begin
        grp_fu_320_p0 = reg_389;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25))) begin
        grp_fu_320_p0 = reg_383;
    end else if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_320_p0 = reg_376;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_fu_320_p0 = reg_356;
    end else begin
        grp_fu_320_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65))) begin
        grp_fu_320_p1 = 32'd1048576000;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        grp_fu_320_p1 = params_Kd_read_reg_1510;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_320_p1 = params_Ki2_read_reg_1515;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state25))) begin
        grp_fu_320_p1 = reg_383;
    end else if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_320_p1 = 32'd1086324736;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_fu_320_p1 = 32'd983564288;
    end else begin
        grp_fu_320_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_fu_325_p0 = ma_1_fu_795_p3;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_325_p0 = reg_389;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_325_p0 = reg_367;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_325_p0 = tmp_53_i4_reg_1478;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_325_p0 = tmp_i2_reg_1468;
    end else begin
        grp_fu_325_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_fu_325_p1 = phA;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_325_p1 = params_Kp_read_reg_1520;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_325_p1 = reg_367;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_325_p1 = 32'd1086324736;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_325_p1 = 32'd983564288;
    end else begin
        grp_fu_325_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_341_p0 = tmp_i6_fu_408_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_341_p0 = tmp_i_fu_398_p1;
    end else begin
        grp_fu_341_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state40) & (or_cond_fu_492_p2 == 1'd0)) | (1'b1 == ap_CS_fsm_state62))) begin
        grp_fu_347_opcode = 5'd2;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state64))) begin
        grp_fu_347_opcode = 5'd4;
    end else begin
        grp_fu_347_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_fu_347_p0 = tmp_16_reg_1639;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state62))) begin
        grp_fu_347_p0 = reg_389;
    end else begin
        grp_fu_347_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_fu_347_p1 = params_y_max_read_reg_1501;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state62))) begin
        grp_fu_347_p1 = params_y_min_read_reg_1493;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state40))) begin
        grp_fu_347_p1 = 32'd0;
    end else begin
        grp_fu_347_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ma8b_1_vld_reg) | ((1'b1 == ma8b_1_vld_reg) & (1'b1 == 1'b1)))) begin
        ma8b_1_ack_in = 1'b1;
    end else begin
        ma8b_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        ma8b_1_vld_in = 1'b1;
    end else begin
        ma8b_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            if (((1'b1 == ap_CS_fsm_state41) & ((or_cond_reg_1582 == 1'd1) | (or_cond4_fu_508_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            if (((1'b1 == ap_CS_fsm_state72) & ~((1'b0 == da_1_ack_in) | (1'b0 == db_1_ack_in) | (1'b0 == dc_1_ack_in) | (1'b0 == Vma8b_1_ack_in) | (1'b0 == ma8b_1_ack_in)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Vma8b = Vma8b_1_data_reg;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

always @ (*) begin
    ap_block_state72 = ((1'b0 == da_1_ack_in) | (1'b0 == db_1_ack_in) | (1'b0 == dc_1_ack_in) | (1'b0 == Vma8b_1_ack_in) | (1'b0 == ma8b_1_ack_in));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign da = da_1_data_reg;

assign db = db_1_data_reg;

assign dc = dc_1_data_reg;

assign grp_fu_344_p0 = vb;

assign loc_V_1_fu_819_p1 = p_Val2_s_fu_805_p1[22:0];

assign loc_V_2_fu_927_p4 = {{p_Val2_4_fu_923_p1[30:23]}};

assign loc_V_3_fu_937_p1 = p_Val2_4_fu_923_p1[22:0];

assign loc_V_4_fu_977_p4 = {{p_Val2_8_fu_965_p1[30:23]}};

assign loc_V_5_fu_987_p1 = p_Val2_8_fu_965_p1[22:0];

assign loc_V_6_fu_1027_p4 = {{p_Val2_10_fu_1015_p1[30:23]}};

assign loc_V_7_fu_1037_p1 = p_Val2_10_fu_1015_p1[22:0];

assign loc_V_8_fu_1077_p4 = {{p_Val2_12_fu_1065_p1[30:23]}};

assign loc_V_9_fu_1087_p1 = p_Val2_12_fu_1065_p1[22:0];

assign loc_V_fu_809_p4 = {{p_Val2_s_fu_805_p1[30:23]}};

assign ma8b = ma8b_1_data_reg;

assign ma_1_fu_795_p3 = ((ctrlByp_read_reg_1531[0:0] === 1'b1) ? params_vRef_read_reg_1525 : y);

assign not_rstIntN_fu_427_p2 = (rstIntN_read_reg_1536 ^ 1'd1);

assign notlhs2_fu_548_p2 = ((tmp_21_fu_517_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs3_fu_566_p2 = ((tmp_23_fu_534_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs5_fu_601_p2 = ((tmp_30_fu_587_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs6_fu_699_p2 = ((tmp_36_fu_685_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs8_fu_751_p2 = ((tmp_42_fu_737_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs_fu_469_p2 = ((tmp_fu_455_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs2_fu_554_p2 = ((tmp_22_fu_527_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs3_fu_572_p2 = ((tmp_24_fu_544_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs5_fu_607_p2 = ((tmp_31_fu_597_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs6_fu_705_p2 = ((tmp_37_fu_695_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs8_fu_757_p2 = ((tmp_43_fu_747_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs_fu_475_p2 = ((tmp_9_fu_465_p1 == 23'd0) ? 1'b1 : 1'b0);

assign or_cond4_fu_508_p2 = (tmp_1_reg_1586 & tmp_20_fu_504_p2);

assign or_cond_fu_492_p2 = (tmp_2_fu_443_p3 & tmp_17_fu_487_p2);

assign p_Val2_10_fu_1015_p1 = grp_fu_333_p2;

assign p_Val2_12_fu_1065_p1 = grp_fu_337_p2;

assign p_Val2_3_fu_915_p3 = ((isNeg_reg_1669[0:0] === 1'b1) ? tmp_48_fu_901_p1 : tmp_49_fu_905_p4);

assign p_Val2_4_fu_923_p1 = grp_fu_320_p2;

assign p_Val2_7_fu_1183_p3 = ((isNeg_1_reg_1695[0:0] === 1'b1) ? tmp_51_fu_1169_p1 : tmp_52_fu_1173_p4);

assign p_Val2_8_fu_965_p1 = grp_fu_325_p2;

assign p_Val2_s_fu_805_p1 = grp_fu_320_p2;

assign params_y_max_to_int_fu_584_p1 = params_y_max_read_reg_1501;

assign params_y_min_to_int_fu_531_p1 = params_y_min_read_reg_1493;

assign sel_tmp1_fu_643_p2 = (tmp_35_fu_632_p2 & sel_tmp_fu_637_p2);

assign sel_tmp2_fu_649_p3 = ((sel_tmp1_fu_643_p2[0:0] === 1'b1) ? params_y_max_read_reg_1501 : reg_389);

assign sel_tmp6_cast_fu_663_p1 = sel_tmp1_fu_643_p2;

assign sel_tmp_fu_637_p2 = (tmp_29_fu_623_p2 ^ 1'd1);

assign sh_assign_1_cast_cas_fu_873_p1 = $signed(sh_assign_1_fu_863_p3);

assign sh_assign_1_cast_fu_869_p1 = $signed(sh_assign_1_fu_863_p3);

assign sh_assign_1_fu_863_p3 = ((isNeg_reg_1669[0:0] === 1'b1) ? tmp_35_i_i_i_cast_fu_860_p1 : sh_assign_reg_1664);

assign sh_assign_2_fu_945_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i1_cast_fu_941_p1));

assign sh_assign_3_cast_cas_fu_1141_p1 = $signed(sh_assign_3_fu_1131_p3);

assign sh_assign_3_cast_fu_1137_p1 = $signed(sh_assign_3_fu_1131_p3);

assign sh_assign_3_fu_1131_p3 = ((isNeg_1_reg_1695[0:0] === 1'b1) ? tmp_35_i_i_i1_cast_fu_1128_p1 : sh_assign_2_reg_1690);

assign sh_assign_4_fu_995_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i2_cast_fu_991_p1));

assign sh_assign_5_cast_cas_fu_1217_p1 = $signed(sh_assign_5_fu_1207_p3);

assign sh_assign_5_cast_fu_1213_p1 = $signed(sh_assign_5_fu_1207_p3);

assign sh_assign_5_fu_1207_p3 = ((isNeg_2_reg_1721[0:0] === 1'b1) ? tmp_43_i_i_i_cast_fu_1204_p1 : sh_assign_4_reg_1716);

assign sh_assign_6_fu_1045_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i3_cast_fu_1041_p1));

assign sh_assign_7_cast_cas_fu_1292_p1 = $signed(sh_assign_7_fu_1282_p3);

assign sh_assign_7_cast_fu_1288_p1 = $signed(sh_assign_7_fu_1282_p3);

assign sh_assign_7_fu_1282_p3 = ((isNeg_3_reg_1747[0:0] === 1'b1) ? tmp_43_i_i_i1_cast_fu_1279_p1 : sh_assign_6_reg_1742);

assign sh_assign_8_fu_1095_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i4_cast8_fu_1091_p1));

assign sh_assign_9_cast_cas_fu_1367_p1 = $signed(sh_assign_9_fu_1357_p3);

assign sh_assign_9_cast_fu_1363_p1 = $signed(sh_assign_9_fu_1357_p3);

assign sh_assign_9_fu_1357_p3 = ((isNeg_4_reg_1773[0:0] === 1'b1) ? tmp_43_i_i_i2_cast_fu_1354_p1 : sh_assign_8_reg_1768);

assign sh_assign_fu_827_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i_cast_fu_823_p1));

assign storemerge1_fu_667_p3 = ((tmp_29_fu_623_p2[0:0] === 1'b1) ? 2'd3 : sel_tmp6_cast_fu_663_p1);

assign tmp_10_to_int_fu_513_p1 = reg_389;

assign tmp_11_fu_481_p2 = (notrhs_fu_475_p2 | notlhs_fu_469_p2);

assign tmp_16_fu_727_p3 = ((tmp_41_fu_722_p2[0:0] === 1'b1) ? reg_389 : params_y_min_read_reg_1493);

assign tmp_16_to_int_fu_681_p1 = reg_389;

assign tmp_17_fu_487_p2 = (tmp_11_fu_481_p2 & tmp_12_reg_1542);

assign tmp_18_fu_779_p3 = ((tmp_47_fu_774_p2[0:0] === 1'b1) ? tmp_16_reg_1639 : params_y_max_read_reg_1501);

assign tmp_18_to_int_fu_734_p1 = tmp_16_reg_1639;

assign tmp_1_fu_498_p2 = ((sat == 2'd1) ? 1'b1 : 1'b0);

assign tmp_20_fu_504_p2 = (tmp_11_reg_1577 & tmp_19_reg_1591);

assign tmp_21_fu_517_p4 = {{tmp_10_to_int_fu_513_p1[30:23]}};

assign tmp_22_fu_527_p1 = tmp_10_to_int_fu_513_p1[22:0];

assign tmp_23_fu_534_p4 = {{params_y_min_to_int_fu_531_p1[30:23]}};

assign tmp_24_fu_544_p1 = params_y_min_to_int_fu_531_p1[22:0];

assign tmp_25_fu_560_p2 = (notrhs2_fu_554_p2 | notlhs2_fu_548_p2);

assign tmp_26_fu_578_p2 = (notrhs3_fu_572_p2 | notlhs3_fu_566_p2);

assign tmp_27_fu_619_p2 = (tmp_25_reg_1600 & tmp_26_reg_1606);

assign tmp_29_fu_623_p2 = (tmp_27_fu_619_p2 & tmp_28_reg_1612);

assign tmp_2_fu_443_p3 = sat[32'd1];

assign tmp_30_fu_587_p4 = {{params_y_max_to_int_fu_584_p1[30:23]}};

assign tmp_31_fu_597_p1 = params_y_max_to_int_fu_584_p1[22:0];

assign tmp_32_fu_613_p2 = (notrhs5_fu_607_p2 | notlhs5_fu_601_p2);

assign tmp_33_fu_628_p2 = (tmp_25_reg_1600 & tmp_32_reg_1617);

assign tmp_34_i_i_i1_cast1_fu_1124_p1 = tmp_34_i_i_i1_fu_1115_p4;

assign tmp_34_i_i_i1_fu_1115_p4 = {{{{1'd1}, {loc_V_3_reg_1685}}}, {1'd0}};

assign tmp_34_i_i_i_cast1_fu_856_p1 = tmp_34_i_i_i_fu_847_p4;

assign tmp_34_i_i_i_fu_847_p4 = {{{{1'd1}, {loc_V_1_reg_1659}}}, {1'd0}};

assign tmp_35_fu_632_p2 = (tmp_33_fu_628_p2 & tmp_34_reg_1623);

assign tmp_35_i_i_i1_cast_fu_1128_p1 = $signed(tmp_35_i_i_i1_reg_1701);

assign tmp_35_i_i_i1_fu_959_p2 = (8'd127 - loc_V_2_fu_927_p4);

assign tmp_35_i_i_i_cast_fu_860_p1 = $signed(tmp_35_i_i_i_reg_1675);

assign tmp_35_i_i_i_fu_841_p2 = (8'd127 - loc_V_fu_809_p4);

assign tmp_36_fu_685_p4 = {{tmp_16_to_int_fu_681_p1[30:23]}};

assign tmp_36_i_i_i1_fu_1145_p1 = $unsigned(sh_assign_3_cast_fu_1137_p1);

assign tmp_36_i_i_i_fu_877_p1 = $unsigned(sh_assign_1_cast_fu_869_p1);

assign tmp_37_fu_695_p1 = tmp_16_to_int_fu_681_p1[22:0];

assign tmp_37_i_i_i1_fu_1149_p2 = tmp_34_i_i_i1_fu_1115_p4 >> sh_assign_3_cast_cas_fu_1141_p1;

assign tmp_37_i_i_i_fu_881_p2 = tmp_34_i_i_i_fu_847_p4 >> sh_assign_1_cast_cas_fu_873_p1;

assign tmp_38_fu_711_p2 = (notrhs6_fu_705_p2 | notlhs6_fu_699_p2);

assign tmp_38_i_i_i1_fu_1155_p2 = tmp_34_i_i_i1_cast1_fu_1124_p1 << tmp_36_i_i_i1_fu_1145_p1;

assign tmp_38_i_i_i_fu_887_p2 = tmp_34_i_i_i_cast1_fu_856_p1 << tmp_36_i_i_i_fu_877_p1;

assign tmp_39_fu_717_p2 = (tmp_38_fu_711_p2 & tmp_26_reg_1606);

assign tmp_41_fu_722_p2 = (tmp_39_fu_717_p2 & tmp_40_reg_1634);

assign tmp_42_fu_737_p4 = {{tmp_18_to_int_fu_734_p1[30:23]}};

assign tmp_42_i_i_i1_cast1_fu_1275_p1 = tmp_42_i_i_i1_fu_1266_p4;

assign tmp_42_i_i_i1_fu_1266_p4 = {{{{1'd1}, {loc_V_7_reg_1737}}}, {1'd0}};

assign tmp_42_i_i_i2_cast9_fu_1350_p1 = tmp_42_i_i_i2_fu_1341_p4;

assign tmp_42_i_i_i2_fu_1341_p4 = {{{{1'd1}, {loc_V_9_reg_1763}}}, {1'd0}};

assign tmp_42_i_i_i_cast1_fu_1200_p1 = tmp_42_i_i_i_fu_1191_p4;

assign tmp_42_i_i_i_fu_1191_p4 = {{{{1'd1}, {loc_V_5_reg_1711}}}, {1'd0}};

assign tmp_43_fu_747_p1 = tmp_18_to_int_fu_734_p1[22:0];

assign tmp_43_i_i_i1_cast_fu_1279_p1 = $signed(tmp_43_i_i_i1_reg_1753);

assign tmp_43_i_i_i1_fu_1059_p2 = (8'd127 - loc_V_6_fu_1027_p4);

assign tmp_43_i_i_i2_cast_fu_1354_p1 = $signed(tmp_43_i_i_i2_reg_1779);

assign tmp_43_i_i_i2_fu_1109_p2 = (8'd127 - loc_V_8_fu_1077_p4);

assign tmp_43_i_i_i_cast_fu_1204_p1 = $signed(tmp_43_i_i_i_reg_1727);

assign tmp_43_i_i_i_fu_1009_p2 = (8'd127 - loc_V_4_fu_977_p4);

assign tmp_44_fu_763_p2 = (notrhs8_fu_757_p2 | notlhs8_fu_751_p2);

assign tmp_44_i_i_i1_fu_1296_p1 = $unsigned(sh_assign_7_cast_fu_1288_p1);

assign tmp_44_i_i_i2_fu_1371_p1 = $unsigned(sh_assign_9_cast_fu_1363_p1);

assign tmp_44_i_i_i_fu_1221_p1 = $unsigned(sh_assign_5_cast_fu_1213_p1);

assign tmp_45_fu_769_p2 = (tmp_44_fu_763_p2 & tmp_32_reg_1617);

assign tmp_45_i_i_i1_fu_1300_p2 = tmp_42_i_i_i1_fu_1266_p4 >> sh_assign_7_cast_cas_fu_1292_p1;

assign tmp_45_i_i_i2_fu_1375_p2 = tmp_42_i_i_i2_fu_1341_p4 >> sh_assign_9_cast_cas_fu_1367_p1;

assign tmp_45_i_i_i_fu_1225_p2 = tmp_42_i_i_i_fu_1191_p4 >> sh_assign_5_cast_cas_fu_1217_p1;

assign tmp_46_i_i_i1_fu_1306_p2 = tmp_42_i_i_i1_cast1_fu_1275_p1 << tmp_44_i_i_i1_fu_1296_p1;

assign tmp_46_i_i_i2_fu_1381_p2 = tmp_42_i_i_i2_cast9_fu_1350_p1 << tmp_44_i_i_i2_fu_1371_p1;

assign tmp_46_i_i_i_fu_1231_p2 = tmp_42_i_i_i_cast1_fu_1200_p1 << tmp_44_i_i_i_fu_1221_p1;

assign tmp_47_fu_774_p2 = (tmp_45_fu_769_p2 & tmp_46_reg_1646);

assign tmp_48_fu_901_p1 = tmp_64_fu_893_p3;

assign tmp_49_fu_905_p4 = {{tmp_38_i_i_i_fu_887_p2[31:24]}};

assign tmp_50_fu_1416_p2 = (9'd0 - tmp_56_reg_1789);

assign tmp_51_fu_1169_p1 = tmp_72_fu_1161_p3;

assign tmp_52_fu_1173_p4 = {{tmp_38_i_i_i1_fu_1155_p2[31:24]}};

assign tmp_53_fu_1421_p3 = ((p_Result_s_reg_1706[0:0] === 1'b1) ? tmp_50_fu_1416_p2 : tmp_56_reg_1789);

assign tmp_54_fu_1245_p1 = tmp_76_fu_1237_p3;

assign tmp_55_fu_1249_p4 = {{tmp_46_i_i_i_fu_1231_p2[32:24]}};

assign tmp_56_fu_1259_p3 = ((isNeg_2_reg_1721[0:0] === 1'b1) ? tmp_54_fu_1245_p1 : tmp_55_fu_1249_p4);

assign tmp_57_fu_1320_p1 = tmp_80_fu_1312_p3;

assign tmp_58_fu_1324_p4 = {{tmp_46_i_i_i1_fu_1306_p2[32:24]}};

assign tmp_59_fu_1334_p3 = ((isNeg_3_reg_1747[0:0] === 1'b1) ? tmp_57_fu_1320_p1 : tmp_58_fu_1324_p4);

assign tmp_60_fu_1428_p2 = (9'd0 - tmp_59_reg_1795);

assign tmp_61_fu_1433_p3 = ((p_Result_1_reg_1732[0:0] === 1'b1) ? tmp_60_fu_1428_p2 : tmp_59_reg_1795);

assign tmp_62_fu_1395_p1 = tmp_84_fu_1387_p3;

assign tmp_63_fu_1399_p4 = {{tmp_46_i_i_i2_fu_1381_p2[32:24]}};

assign tmp_64_fu_893_p3 = tmp_37_i_i_i_fu_881_p2[32'd24];

assign tmp_65_fu_1409_p3 = ((isNeg_4_reg_1773[0:0] === 1'b1) ? tmp_62_fu_1395_p1 : tmp_63_fu_1399_p4);

assign tmp_66_fu_1440_p2 = (9'd0 - tmp_65_reg_1801);

assign tmp_67_fu_1445_p3 = ((p_Result_2_reg_1758[0:0] === 1'b1) ? tmp_66_fu_1440_p2 : tmp_65_reg_1801);

assign tmp_72_fu_1161_p3 = tmp_37_i_i_i1_fu_1149_p2[32'd24];

assign tmp_76_fu_1237_p3 = tmp_45_i_i_i_fu_1225_p2[32'd24];

assign tmp_80_fu_1312_p3 = tmp_45_i_i_i1_fu_1300_p2[32'd24];

assign tmp_84_fu_1387_p3 = tmp_45_i_i_i2_fu_1375_p2[32'd24];

assign tmp_8_to_int_fu_451_p1 = reg_389;

assign tmp_9_fu_465_p1 = tmp_8_to_int_fu_451_p1[22:0];

assign tmp_fu_455_p4 = {{tmp_8_to_int_fu_451_p1[30:23]}};

assign tmp_i6_fu_408_p1 = vc;

assign tmp_i_fu_398_p1 = va;

assign tmp_i_i_i_i1_cast_fu_941_p1 = loc_V_2_fu_927_p4;

assign tmp_i_i_i_i2_cast_fu_991_p1 = loc_V_4_fu_977_p4;

assign tmp_i_i_i_i3_cast_fu_1041_p1 = loc_V_6_fu_1027_p4;

assign tmp_i_i_i_i4_cast8_fu_1091_p1 = loc_V_8_fu_1077_p4;

assign tmp_i_i_i_i_cast_fu_823_p1 = loc_V_fu_809_p4;

assign y_integral_flag_2_phi_fu_291_p4 = y_integral_flag_2_reg_287;

assign y_integral_load_s_fu_432_p3 = ((rstIntN_read_reg_1536[0:0] === 1'b1) ? y_integral : 32'd0);

assign y_integral_new_1_fu_656_p3 = ((tmp_29_fu_623_p2[0:0] === 1'b1) ? params_y_min_read_reg_1493 : sel_tmp2_fu_649_p3);

endmodule //vsi_control
